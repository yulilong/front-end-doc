(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{494:function(t,a,s){t.exports=s.p+"assets/img/003-map.a306da19.png"},495:function(t,a,s){t.exports=s.p+"assets/img/004-map.1c96aa5e.png"},496:function(t,a,s){t.exports=s.p+"assets/img/005-map.b4ec4f2a.jpg"},497:function(t,a,s){t.exports=s.p+"assets/img/006-map.56a20690.png"},498:function(t,a,s){t.exports=s.p+"assets/img/007-map.8d6007ce.png"},499:function(t,a,s){t.exports=s.p+"assets/img/008-map.3dc7129b.jpg"},500:function(t,a,s){t.exports=s.p+"assets/img/009-map.bce93217.png"},501:function(t,a,s){t.exports=s.p+"assets/img/010-map.756c2b18.png"},502:function(t,a,s){t.exports=s.p+"assets/img/011-map.ba95461d.png"},736:function(t,a,s){"use strict";s.r(a);var e=[function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("div",{staticClass:"content"},[e("p"),e("div",{staticClass:"table-of-contents"},[e("ul",[e("li",[e("a",{attrs:{href:"#_1-mvc与mvvm的区别"}},[t._v("1. MVC与MVVM的区别")])]),e("li",[e("a",{attrs:{href:"#_2-vue基本代码结构"}},[t._v("2. vue基本代码结构")]),e("ul",[e("li",[e("a",{attrs:{href:"#_2-1-实例属性和方法"}},[t._v("2.1 实例属性和方法")])])])]),e("li",[e("a",{attrs:{href:"#_3-vue指令"}},[t._v("3. vue指令")])]),e("li",[e("a",{attrs:{href:"#_4-vue组件"}},[t._v("4. vue组件")]),e("ul",[e("li",[e("a",{attrs:{href:"#_4-1-组件配置对象和vue实例的区别"}},[t._v("4.1  组件配置对象和vue实例的区别")])]),e("li",[e("a",{attrs:{href:"#_4-2-创建组件模板"}},[t._v("4.2 创建组件模板")])]),e("li",[e("a",{attrs:{href:"#_4-3-组件中的data是一个函数的原因"}},[t._v("4.3 组件中的data是一个函数的原因")])]),e("li",[e("a",{attrs:{href:"#_4-4-ref属性"}},[t._v("4.4 ref属性")])]),e("li",[e("a",{attrs:{href:"#_4-5-作用域插槽：父组件替换插槽的标签，内容由子组件决定"}},[t._v("4.5 作用域插槽：父组件替换插槽的标签，内容由子组件决定")])])])]),e("li",[e("a",{attrs:{href:"#_5-class和style动态绑定"}},[t._v("5. class和style动态绑定")])]),e("li",[e("a",{attrs:{href:"#_6-computed-计算属性"}},[t._v("6. computed 计算属性")])]),e("li",[e("a",{attrs:{href:"#_7-eventbus"}},[t._v("7. EventBus")])]),e("li",[e("a",{attrs:{href:"#_8-filter过滤器方法"}},[t._v("8. filter过滤器方法")])])])]),e("p"),t._v(" "),e("p",[t._v("[TOC]")]),t._v(" "),e("h1",{attrs:{id:"vue知识点思维导图"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue知识点思维导图","aria-hidden":"true"}},[t._v("#")]),t._v(" vue知识点思维导图")]),t._v(" "),e("p",[t._v("转载整理自：https://cloud.tencent.com/developer/article/1692379")]),t._v(" "),e("p",[e("code",[t._v("Vue")]),t._v("是一套构建用户界面的框架，只关注视图层，它不仅易于上手，还便于与第三方库或既有项目整合。（"),e("code",[t._v("Vue")]),t._v("有配套的第三方类库，可以整合起来做大型项目的开发）")]),t._v(" "),e("p",[e("img",{attrs:{src:s(494),alt:""}})]),t._v(" "),e("h2",{attrs:{id:"_1-mvc与mvvm的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-mvc与mvvm的区别","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. MVC与MVVM的区别")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("MVC")]),t._v("是后端的分层开发概念；")]),t._v(" "),e("li",[e("code",[t._v("MVVM")]),t._v("是前端视图层的概念，主要关注于 "),e("strong",[t._v("视图层分离")]),t._v("。"),e("code",[t._v("MVVM")]),t._v("把前端的视图层分为了三部分："),e("code",[t._v("Model")]),t._v(","),e("code",[t._v("View")]),t._v(","),e("code",[t._v("VM ViewModel")])])]),t._v(" "),e("h2",{attrs:{id:"_2-vue基本代码结构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-vue基本代码结构","aria-hidden":"true"}},[t._v("#")]),t._v(" 2. vue基本代码结构")]),t._v(" "),e("p",[e("img",{attrs:{src:s(495),alt:""}})]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" vm "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{attrs:{class:"token class-name"}},[t._v("Vue")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n el"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{attrs:{class:"token string"}},[t._v("'#app'")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{attrs:{class:"token comment"}},[t._v("//所有的挂载元素会被 Vue 生成的 DOM 替换")]),t._v("\n data"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{attrs:{class:"token comment"}},[t._v("// this->window },")]),t._v("\n methods"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{attrs:{class:"token comment"}},[t._v("// this->vm},")]),t._v("\n "),e("span",{attrs:{class:"token comment"}},[t._v("//注意，不应该使用箭头函数来定义 method 函数 ,this将不再指向vm实例")]),t._v("\n props"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{attrs:{class:"token comment"}},[t._v("// 可以是数组或对象类型，用于接收来自父组件的数据")]),t._v("\n "),e("span",{attrs:{class:"token comment"}},[t._v("//对象允许配置高级选项，如类型检测、自定义验证和设置默认值")]),t._v("\n watch"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{attrs:{class:"token comment"}},[t._v("// this->vm},")]),t._v("\n computed"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n "),e("span",{attrs:{class:"token function"}},[t._v("render")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n "),e("span",{attrs:{class:"token comment"}},[t._v("// 声明周期钩子函数")]),t._v("\n"),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("当一个"),e("code",[t._v("Vue")]),t._v("实例被创建时，它将"),e("code",[t._v("data")]),t._v("对象中的所有的"),e("code",[t._v("property")]),t._v("加入到"),e("code",[t._v("Vue")]),t._v("的响应式系统中。当这些"),e("code",[t._v("property")]),t._v("的值发生改变时，视图将会产生 "),e("strong",[t._v("响应")]),t._v("，即匹配更新为新的值。")]),t._v(" "),e("p",[t._v("例外：")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("Vue")]),t._v("实例外部新增的属性改变时不会更新视图。")]),t._v(" "),e("li",[e("code",[t._v("Object.freeze()")]),t._v("，会阻止修改现有的"),e("code",[t._v("property")]),t._v("，响应系统无法追踪其变化。")])]),t._v(" "),e("h3",{attrs:{id:"_2-1-实例属性和方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-实例属性和方法","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.1 实例属性和方法")]),t._v(" "),e("ul",[e("li",[t._v("访问"),e("code",[t._v("el")]),t._v("属性："),e("code",[t._v("vm.$el")]),t._v(",`document.getElemnetById(‘app’)``;")]),t._v(" "),e("li",[t._v("访问"),e("code",[t._v("data")]),t._v("属性："),e("code",[t._v("vm.$data")])]),t._v(" "),e("li",[t._v("以_或开头的property不会被Vue实例代理，因为它们可能和Vue内置的property、API方法冲突。你可以使用例如vm.data._property的方式访问这些property。")]),t._v(" "),e("li",[t._v("访问"),e("code",[t._v("data")]),t._v("中定义的变量："),e("code",[t._v("vm.a")]),t._v(","),e("code",[t._v("vm.$data.a")])]),t._v(" "),e("li",[t._v("访问"),e("code",[t._v("methods")]),t._v("中的方法："),e("code",[t._v("vm.方法名()")])]),t._v(" "),e("li",[t._v("访问"),e("code",[t._v("watch")]),t._v("方法："),e("code",[t._v("vm.$watch()")])])]),t._v(" "),e("p",[t._v("不要在选项"),e("code",[t._v("property")]),t._v("或回调上使用箭头函数,"),e("code",[t._v("this")]),t._v("将不会指向"),e("code",[t._v("Vue")]),t._v("实例 比如"),e("code",[t._v("created: () => console.log(this.a)")]),t._v("或"),e("code",[t._v("vm.$watch('a', newValue => this.myMethod())")]),t._v("。")]),t._v(" "),e("p",[t._v("因为箭头函数并没有"),e("code",[t._v("this")]),t._v("，"),e("code",[t._v("this")]),t._v("会作为变量一直向上级词法作用域查找，直至找到为止，经常导致"),e("code",[t._v("Uncaught TypeError: Cannot read property of undefined")]),t._v("或"),e("code",[t._v("Uncaught TypeError: this.myMethod is not a function")]),t._v("之类的错误。")]),t._v(" "),e("h2",{attrs:{id:"_3-vue指令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-vue指令","aria-hidden":"true"}},[t._v("#")]),t._v(" 3. vue指令")]),t._v(" "),e("p",[e("img",{attrs:{src:s(496),alt:""}})]),t._v(" "),e("p",[e("strong",[t._v("插入数据：")])]),t._v(" "),e("ul",[e("li",[t._v("插值表达式相当于占位符，不会清空元素中的其他内容。直接写在标签中。会将"),e("code",[t._v("html")]),t._v("标签作为文本显示。")]),t._v(" "),e("li",[e("code",[t._v("v-text")]),t._v("会覆盖元素中原本的内容。写在开始标签中，以属性的形式存在。会将"),e("code",[t._v("html")]),t._v("标签作为文本显示。")]),t._v(" "),e("li",[e("code",[t._v("v-html（innerHTML）")]),t._v("会覆盖元素中原本的内容，会将数据解析成"),e("code",[t._v("html")]),t._v("标签。")])]),t._v(" "),e("p",[e("img",{attrs:{src:s(497),alt:""}})]),t._v(" "),e("h2",{attrs:{id:"_4-vue组件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-vue组件","aria-hidden":"true"}},[t._v("#")]),t._v(" 4. vue组件")]),t._v(" "),e("p",[e("img",{attrs:{src:s(498),alt:""}})]),t._v(" "),e("h3",{attrs:{id:"_4-1-组件配置对象和vue实例的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-组件配置对象和vue实例的区别","aria-hidden":"true"}},[t._v("#")]),t._v(" 4.1  "),e("strong",[t._v("组件配置对象和vue实例的区别")])]),t._v(" "),e("ul",[e("li",[t._v("组件配置对象没有"),e("code",[t._v("el")]),t._v("，组件模板定义在"),e("code",[t._v("template")]),t._v("中；")]),t._v(" "),e("li",[t._v("组件配置对象中"),e("code",[t._v("data")]),t._v("是函数，该函数返回的对象作为数据。")])]),t._v(" "),e("h3",{attrs:{id:"_4-2-创建组件模板"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-创建组件模板","aria-hidden":"true"}},[t._v("#")]),t._v(" 4.2 创建组件模板")]),t._v(" "),e("ul",[e("li",[t._v("方法一")])]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" com "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" Vue"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token function"}},[t._v("extend")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),e("span",{attrs:{class:"token comment"}},[t._v("//通过template属性 指定组件要展示的html结构")]),t._v("\n template"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{attrs:{class:"token string"}},[t._v("'<h3>这是使用Vue.extend搭建的全局组件</h3>'")]),t._v(" \n"),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("ul",[e("li",[t._v("方法二：使用对象创建模板")])]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n template"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{attrs:{class:"token string"}},[t._v("'<h3>这是使用Vue.extend搭建的全局组件-com3</h3>'")]),t._v("      \n"),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("ul",[e("li",[t._v("方法三：使用"),e("code",[t._v("template")]),t._v("标签（写在受控区域外面）创建模板，通过"),e("code",[t._v("id")]),t._v("建立联系")])]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("template id"),e("span",{attrs:{class:"token operator"}},[t._v("=")]),e("span",{attrs:{class:"token string"}},[t._v('"tmpl"')]),e("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" 写在受控区域外面\n  "),e("span",{attrs:{class:"token operator"}},[t._v("...")]),e("span",{attrs:{class:"token operator"}},[t._v("...")]),t._v("\n"),e("span",{attrs:{class:"token operator"}},[t._v("<")]),e("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("template"),e("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" \n\n"),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" template"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{attrs:{class:"token string"}},[t._v("'#tmpl'")]),t._v("  "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h3",{attrs:{id:"_4-3-组件中的data是一个函数的原因"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-组件中的data是一个函数的原因","aria-hidden":"true"}},[t._v("#")]),t._v(" 4.3 组件中的data是一个函数的原因")]),t._v(" "),e("ul",[e("li",[t._v("多次使用该组件，如果修改其中一个中的数据，另一个也会改变。")]),t._v(" "),e("li",[t._v("写成函数的形式，每次调用函数，返回一个新的对象")])]),t._v(" "),e("h3",{attrs:{id:"_4-4-ref属性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-ref属性","aria-hidden":"true"}},[t._v("#")]),t._v(" 4.4 ref属性")]),t._v(" "),e("ul",[e("li",[t._v("获取"),e("code",[t._v("dom")]),t._v("元素/组件：标签上添加"),e("code",[t._v("ref")]),t._v("属性，"),e("code",[t._v("this.$refs.ref")]),t._v("属性值获取该"),e("code",[t._v("dom元素/组件")]),t._v("。")]),t._v(" "),e("li",[e("code",[t._v("this.$refs.ref")]),t._v("属性值"),e("code",[t._v(".变量名")]),t._v("获取组件中的数据")]),t._v(" "),e("li",[e("code",[t._v("this.$refs.ref")]),t._v("属性值"),e("code",[t._v(".方法名()")]),t._v("获取组件中的方法")])]),t._v(" "),e("h5",{attrs:{id:"parent-和-children-获取-父-子组件的数据和方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#parent-和-children-获取-父-子组件的数据和方法","aria-hidden":"true"}},[t._v("#")]),t._v(" "),e("strong",[e("code",[t._v("$parent")]),t._v(" 和 "),e("code",[t._v("$children")]),t._v(" 获取 父/子组件的数据和方法")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("this.$parent")]),t._v("获取父组件")]),t._v(" "),e("li",[e("code",[t._v("$children")]),t._v("由于子组件的个数不确定 返回的是一个数组 ,不是对象")]),t._v(" "),e("li",[e("code",[t._v("this.$children[0]")]),t._v("获取第一个子组件")])]),t._v(" "),e("h3",{attrs:{id:"_4-5-作用域插槽：父组件替换插槽的标签，内容由子组件决定"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-作用域插槽：父组件替换插槽的标签，内容由子组件决定","aria-hidden":"true"}},[t._v("#")]),t._v(" 4.5 作用域插槽：父组件替换插槽的标签，内容由子组件决定")]),t._v(" "),e("blockquote",[e("p",[t._v("编译的作用域：自身的数据在自身模板"),e("code",[t._v("template")]),t._v("标签中生效")])]),t._v(" "),e("ul",[e("li",[t._v("插槽上添加 "),e("strong",[t._v("属性绑定")]),t._v("："),e("code",[t._v("data=’子组件中的数据’")])]),t._v(" "),e("li",[t._v("父组件通过"),e("code",[t._v("template")]),t._v("标签，添加"),e("code",[t._v("slot-scope=’slot’")]),t._v(" "),e("code",[t._v("slot-scope")]),t._v("属性接收子组件中的数据"),e("code",[t._v("slot.data")])]),t._v(" "),e("li",[e("code",[t._v("template")]),t._v("标签中的html结构替换"),e("code",[t._v("slot")]),t._v("插槽中的默认"),e("code",[t._v("html")]),t._v("结构。")])]),t._v(" "),e("h2",{attrs:{id:"_5-class和style动态绑定"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-class和style动态绑定","aria-hidden":"true"}},[t._v("#")]),t._v(" 5. class和style动态绑定")]),t._v(" "),e("p",[e("img",{attrs:{src:s(499),alt:""}})]),t._v(" "),e("h2",{attrs:{id:"_6-computed-计算属性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-computed-计算属性","aria-hidden":"true"}},[t._v("#")]),t._v(" 6. computed 计算属性")]),t._v(" "),e("p",[e("img",{attrs:{src:s(500),alt:""}})]),t._v(" "),e("h2",{attrs:{id:"_7-eventbus"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7-eventbus","aria-hidden":"true"}},[t._v("#")]),t._v(" 7. EventBus")]),t._v(" "),e("p",[e("img",{attrs:{src:s(501),alt:""}})]),t._v(" "),e("h2",{attrs:{id:"_8-filter过滤器方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_8-filter过滤器方法","aria-hidden":"true"}},[t._v("#")]),t._v(" 8. filter过滤器方法")]),t._v(" "),e("p",[e("img",{attrs:{src:s(502),alt:""}})]),t._v(" "),e("p",[t._v("https://zhuanlan.zhihu.com/p/269766611")])])}],v=s(0),_=Object(v.a)({},function(){this.$createElement;this._self._c;return this._m(0)},e,!1,null,null,null);_.options.__file="008-vue知识点思维导图.md";a.default=_.exports}}]);