(window.webpackJsonp=window.webpackJsonp||[]).push([[121],{598:function(e,t,n){"use strict";n.r(t);var s=n(0),i=Object(s.a)({},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"content"},[n("p"),e._m(0),n("p"),e._v(" "),n("p",[e._v("[TOC]")]),e._v(" "),e._m(1),e._v(" "),n("p",[e._v("Element元素的继承关系：")]),e._v(" "),e._m(2),n("p",[e._v("Element对象对应网页的HTML元素。每个HTML元素在DOM树上都会转化成一个Element节点对象。")]),e._v(" "),e._m(3),e._v(" "),e._m(4),e._m(5),e._v(" "),e._m(6),e._v(" "),e._m(7),e._v(" "),e._m(8),e._v(" "),e._m(9),e._v(" "),e._m(10),e._v(" "),e._m(11),e._m(12),e._v(" "),e._m(13),e._v(" "),e._m(14),e._m(15),e._v(" "),e._m(16),e._v(" "),e._m(17),e._v(" "),e._m(18),e._v(" "),e._m(19),e._m(20),e._v(" "),e._m(21),e._v(" "),e._m(22),e._v(" "),e._m(23),e._v(" "),e._m(24),e._v(" "),e._m(25),e._v(" "),e._m(26),e._m(27),e._v(" "),e._m(28),e._v(" "),e._m(29),e._v(" "),e._m(30),e._v(" "),e._m(31),e._m(32),e._v(" "),e._m(33),e._v(" "),e._m(34),e._v(" "),e._m(35),e._m(36),e._v(" "),e._m(37),e._m(38),e._v(" "),e._m(39),e._m(40),e._v(" "),e._m(41),e._v(" "),e._m(42),e._v(" "),e._m(43),e._m(44),e._v(" "),e._m(45),e._v(" "),e._m(46),e._v(" "),e._m(47),e._v(" "),e._m(48),e._v(" "),e._m(49),e._m(50),e._v(" "),e._m(51),e._v(" "),e._m(52),e._v(" "),e._m(53),e._v(" "),e._m(54),e._m(55),e._v(" "),e._m(56),e._m(57),e._v(" "),e._m(58),e._m(59),e._v(" "),e._m(60),e._v(" "),e._m(61),e._v(" "),e._m(62),e._m(63),e._v(" "),e._m(64),e._m(65),e._v(" "),e._m(66),e._v(" "),e._m(67),e._m(68),e._v(" "),e._m(69),e._v(" "),e._m(70),e._v(" "),e._m(71),e._v(" "),e._m(72),e._v(" "),e._m(73),e._m(74),e._v(" "),e._m(75),e._v(" "),e._m(76),e._v(" "),e._m(77),e._m(78),e._v(" "),e._m(79),e._v(" "),e._m(80),e._v(" "),e._m(81),e._v(" "),e._m(82),e._m(83),e._v(" "),e._m(84),e._v(" "),e._m(85),e._v(" "),e._m(86),e._v(" "),n("p",[e._v("这两个属性都可读写，设置该属性的值，会导致浏览器将当前元素自动滚动到相应的位置。")]),e._v(" "),e._m(87),e._v(" "),e._m(88),e._m(89),e._v(" "),e._m(90),e._v(" "),e._m(91),e._v(" "),e._m(92),e._v(" "),e._m(93),e._v(" "),e._m(94),e._m(95),e._v(" "),e._m(96),e._v(" "),e._m(97),e._v(" "),e._m(98),e._v(" "),e._m(99),e._v(" "),e._m(100),e._v(" "),e._m(101),e._v(" "),e._m(102),e._m(103),e._v(" "),e._m(104),e._v(" "),e._m(105),n("p",[e._v("下面的代码可以算出元素左上角相对于整张网页的坐标:")]),e._v(" "),e._m(106),n("p",[e._v("下面是函数测试：")]),e._v(" "),e._m(107),e._m(108),e._v(" "),e._m(109),e._v(" "),n("p",[n("code",[e._v("style")]),e._v("属性返回一个 "),n("a",{attrs:{href:"https://developer.mozilla.org/zh-US/docs/DOM/CSSStyleDeclaration",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v("CSSStyleDeclaration")]),n("OutboundLink")],1),e._v(" 对象，表示元素的 内联"),n("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Global_attributes#style",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v("style")]),e._v(" 属性（attribute）"),n("OutboundLink")],1),e._v("，但忽略任何样式表应用的属性。")]),e._v(" "),e._m(110),e._v(" "),n("p",[n("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/HTMLElement/style",target:"_blank",rel:"noopener noreferrer"}},[e._v("HTMLElement.style   MDN"),n("OutboundLink")],1)]),e._v(" "),e._m(111),e._v(" "),e._m(112),e._v(" "),e._m(113),e._v(" "),e._m(114),e._v(" "),e._m(115),e._m(116),e._v(" "),e._m(117),e._v(" "),e._m(118),e._v(" "),e._m(119),e._v(" "),e._m(120),e._m(121),e._v(" "),e._m(122),e._v(" "),e._m(123),e._v(" "),e._m(124),e._m(125),e._v(" "),e._m(126),e._v(" "),n("p",[e._v("元素节点提供六个方法，用来操作属性。")]),e._v(" "),e._m(127),e._v(" "),n("p",[e._v("这些方法的介绍请看《属性的操作》一章。")]),e._v(" "),e._m(128),e._v(" "),e._m(129),e._v(" "),e._m(130),e._m(131),e._v(" "),e._m(132),e._v(" "),e._m(133),n("p",[e._v("注意，这个方法无法选中伪元素。")]),e._v(" "),n("p",[e._v("它可以接受多个选择器，它们之间使用逗号分隔。")]),e._v(" "),e._m(134),e._m(135),e._v(" "),e._m(136),e._v(" "),e._m(137),e._m(138),e._v(" "),e._m(139),e._v(" "),e._m(140),e._v(" "),e._m(141),e._v(" "),e._m(142),e._v(" "),e._m(143),e._m(144),e._v(" "),e._m(145),e._v(" "),n("p",[e._v("注意，该方法的参数大小写敏感。")]),e._v(" "),e._m(146),e._v(" "),e._m(147),e._m(148),e._v(" "),e._m(149),e._v(" "),e._m(150),e._v(" "),n("p",[e._v("注意，该方法的参数是大小写不敏感的。")]),e._v(" "),e._m(151),e._m(152),e._v(" "),e._m(153),e._v(" "),e._m(154),e._m(155),e._v(" "),e._m(156),e._v(" "),e._m(157),e._v(" "),e._m(158),e._m(159),e._v(" "),e._m(160),e._v(" "),e._m(161),e._v(" "),e._m(162),e._m(163),e._v(" "),e._m(164),e._v(" "),n("p",[e._v("该方法可以接受一个布尔值作为参数:")]),e._v(" "),e._m(165),e._v(" "),e._m(166),e._v(" "),e._m(167),e._v(" "),e._m(168),e._m(169),e._v(" "),e._m(170),e._v(" "),e._m(171),e._m(172),e._v(" "),e._m(173),e._v(" "),e._m(174),e._v(" "),e._m(175),e._v(" "),e._m(176),e._v(" "),e._m(177),e._v(" "),e._m(178),e._v(" "),e._m(179),e._v(" "),e._m(180),e._v(" "),e._m(181),e._v(" "),n("p",[e._v("HTML代码中行内元素行数，加上实际网页行数减一，")]),e._v(" "),n("p",[e._v("比如代码中span元素写了三行，实际页面是2行，那么返回的对象就是4个")]),e._v(" "),e._m(182),e._v(" "),e._m(183),n("p",[e._v("这个方法主要用于判断行内元素是否换行，以及行内元素的每一行的位置偏移。")]),e._v(" "),e._m(184),e._v(" "),e._m(185),e._v(" "),n("p",[e._v("该方法一共可以接受两个参数，第一个参数是一个字符串，表示插入的位置，第二个参数是将要插入的节点。第一个参数只可以取如下的值：")]),e._v(" "),e._m(186),e._v(" "),e._m(187),e._v(" "),n("p",[e._v("如果插入的节点是一个文档里现有的节点，它会从原有位置删除，放置到新的位置。")]),e._v(" "),e._m(188),e._m(189),e._v(" "),e._m(190),e._v(" "),n("p",[e._v("该方法接受两个参数，第一个是一个表示指定位置的字符串，第二个是待解析的 HTML 字符串。第一个参数只能设置下面四个值之一。")]),e._v(" "),e._m(191),e._v(" "),e._m(192),e._v(" "),n("p",[e._v("注意，该方法不会转义 HTML 字符串，这导致它不能用来插入用户输入的内容，否则会有安全风险。")]),e._v(" "),e._m(193),e._v(" "),e._m(194),e._m(195),e._v(" "),e._m(196),e._v(" "),e._m(197),e._m(198),e._v(" "),e._m(199),e._v(" "),e._m(200),e._v(" "),e._m(201),e._m(202),e._v(" "),e._m(203),e._v(" "),e._m(204),e._v(" "),e._m(205),e._m(206),e._v(" "),e._m(207),e._v(" "),e._m(208),e._v(" "),n("p",[n("a",{attrs:{href:"https://javascript.ruanyifeng.com/dom/element.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Element对象 阮一峰"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("a",{attrs:{href:"https://wangdoc.com/javascript/dom/element.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Element 节点 阮一峰 网道"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/HTMLElement",target:"_blank",rel:"noopener noreferrer"}},[e._v("HTMLElement  MDN"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Element",target:"_blank",rel:"noopener noreferrer"}},[e._v("Element  MDN"),n("OutboundLink")],1)])])},[function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"table-of-contents"},[n("ul",[n("li",[n("a",{attrs:{href:"#_1-element实例的属性"}},[e._v("1. Element实例的属性")]),n("ul",[n("li",[n("a",{attrs:{href:"#_1-1-元素特性的相关属性"}},[e._v("1.1 元素特性的相关属性")])]),n("li",[n("a",{attrs:{href:"#_1-2-元素状态的相关属性"}},[e._v("1.2 元素状态的相关属性")])]),n("li",[n("a",{attrs:{href:"#_1-3-element-attributes"}},[e._v("1.3 Element.attributes")])]),n("li",[n("a",{attrs:{href:"#_1-4-element-classname，element-classlist"}},[e._v("1.4 Element.className，Element.classList")])]),n("li",[n("a",{attrs:{href:"#_1-5-element-dataset"}},[e._v("1.5 Element.dataset")])]),n("li",[n("a",{attrs:{href:"#_1-6-element-innerhtml"}},[e._v("1.6 Element.innerHTML")])]),n("li",[n("a",{attrs:{href:"#_1-7-element-outerhtml"}},[e._v("1.7 Element.outerHTML")])]),n("li",[n("a",{attrs:{href:"#_1-8-element-clientheight，element-clientwidth"}},[e._v("1.8 Element.clientHeight，Element.clientWidth")])]),n("li",[n("a",{attrs:{href:"#_1-9-element-clientleft，element-clienttop"}},[e._v("1.9 Element.clientLeft，Element.clientTop")])]),n("li",[n("a",{attrs:{href:"#_1-10-element-scrollheight，element-scrollwidth"}},[e._v("1.10 Element.scrollHeight，Element.scrollWidth")])]),n("li",[n("a",{attrs:{href:"#_1-11-element-scrollleft，element-scrolltop"}},[e._v("1.11 Element.scrollLeft，Element.scrollTop")])]),n("li",[n("a",{attrs:{href:"#_1-12-element-offsetparent"}},[e._v("1.12 Element.offsetParent")])]),n("li",[n("a",{attrs:{href:"#_1-13-element-offsetheight，element-offsetwidth"}},[e._v("1.13 Element.offsetHeight，Element.offsetWidth")])]),n("li",[n("a",{attrs:{href:"#_1-14-element-offsetleft，element-offsettop"}},[e._v("1.14 Element.offsetLeft，Element.offsetTop")])]),n("li",[n("a",{attrs:{href:"#_1-15-element-style"}},[e._v("1.15 Element.style")])]),n("li",[n("a",{attrs:{href:"#_1-16-element-children，element-childelementcount"}},[e._v("1.16 Element.children，Element.childElementCount")])]),n("li",[n("a",{attrs:{href:"#_1-17-element-firstelementchild，element-lastelementchild"}},[e._v("1.17 Element.firstElementChild，Element.lastElementChild")])]),n("li",[n("a",{attrs:{href:"#_1-18-element-nextelementsibling，element-previouselementsibling"}},[e._v("1.18 Element.nextElementSibling，Element.previousElementSibling")])])])]),n("li",[n("a",{attrs:{href:"#_2-实例方法"}},[e._v("2. 实例方法")]),n("ul",[n("li",[n("a",{attrs:{href:"#_2-1-属性相关方法"}},[e._v("2.1 属性相关方法")])]),n("li",[n("a",{attrs:{href:"#_2-1-element-queryselector"}},[e._v("2.1 Element.querySelector()")])]),n("li",[n("a",{attrs:{href:"#_2-3-element-queryselectorall"}},[e._v("2.3 Element.querySelectorAll()")])]),n("li",[n("a",{attrs:{href:"#_2-4-element-getelementsbyclassname"}},[e._v("2.4 Element.getElementsByClassName()")])]),n("li",[n("a",{attrs:{href:"#_2-5-element-getelementsbytagname"}},[e._v("2.5 Element.getElementsByTagName()")])]),n("li",[n("a",{attrs:{href:"#_2-6-element-closest"}},[e._v("2.6 Element.closest()")])]),n("li",[n("a",{attrs:{href:"#_2-7-element-matches"}},[e._v("2.7 Element.matches()")])]),n("li",[n("a",{attrs:{href:"#_2-8-事件相关方法"}},[e._v("2.8 事件相关方法")])]),n("li",[n("a",{attrs:{href:"#_2-9-element-scrollintoview"}},[e._v("2.9 Element.scrollIntoView()")])]),n("li",[n("a",{attrs:{href:"#_2-10-element-getboundingclientrect"}},[e._v("2.10 Element.getBoundingClientRect()")])]),n("li",[n("a",{attrs:{href:"#_2-11-element-getclientrects"}},[e._v("2.11 Element.getClientRects()")])]),n("li",[n("a",{attrs:{href:"#_2-12-element-insertadjacentelement"}},[e._v("2.12 Element.insertAdjacentElement()")])]),n("li",[n("a",{attrs:{href:"#_2-13-element-insertadjacenthtml-，element-insertadjacenttext"}},[e._v("2.13 Element.insertAdjacentHTML()，Element.insertAdjacentText()")])]),n("li",[n("a",{attrs:{href:"#_2-14-element-remove"}},[e._v("2.14 Element.remove()")])]),n("li",[n("a",{attrs:{href:"#_2-15-element-focus-，element-blur"}},[e._v("2.15 Element.focus()，Element.blur()")])]),n("li",[n("a",{attrs:{href:"#_2-16-element-click"}},[e._v("2.16 Element.click()")])])])]),n("li",[n("a",{attrs:{href:"#_3-参考资料"}},[e._v("3. 参考资料")])])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"七、element对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#七、element对象","aria-hidden":"true"}},[this._v("#")]),this._v(" 七、Element对象")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("+---------------+       +-----------+          +----------+\n|  EventTarget  | ----\x3e | Node      | =------\x3e | Element  |\n+---------------+       +-----------+          +----------+\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("元素节点的"),t("code",[this._v("nodeType")]),this._v("属性都是1.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("<p>ppppp</p>\n<script>\n    var p = document.querySelector('p');\n    console.log(p.nodeName);  // \"P\"\n    console.log(p.nodeType);  // 1\n<\/script>\n")])])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[e._v("Element对象继承了Node接口，因此Node的属性和方法在Element对象都存在。此外，不同的HTML元素对应的元素节点是不一样的，浏览器使用不同的构造函数，生成不同的元素节点，比如"),n("code",[e._v("<a>")]),e._v("元素的节点对象由"),n("code",[e._v("HTMLAnchorElement")]),e._v("构造函数生成，"),n("code",[e._v("<button>")]),e._v("元素的节点对象由"),n("code",[e._v("HTMLButtonElement")]),e._v("构造函数生成。因此，元素节点不是一种对象，而是一组对象，这些对象除了继承"),n("code",[e._v("Element")]),e._v("的属性和方法，还有各自构造函数的属性和方法。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"_1-element实例的属性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-element实例的属性","aria-hidden":"true"}},[this._v("#")]),this._v(" 1. Element实例的属性")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"_1-1-元素特性的相关属性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-元素特性的相关属性","aria-hidden":"true"}},[this._v("#")]),this._v(" 1.1 元素特性的相关属性")])},function(){var e=this.$createElement,t=this._self._c||e;return t("ol",[t("li",[t("strong",[this._v("Element.id")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("Element.id")]),this._v("属性返回指定元素的"),t("code",[this._v("id")]),this._v("属性，该属性可读写。")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[e._v("注意，"),n("code",[e._v("id")]),e._v("属性的值是大小写敏感，即浏览器能正确识别"),n("code",[e._v('<p id="foo">')]),e._v("和"),n("code",[e._v('<p id="FOO">')]),e._v("这两个元素的"),n("code",[e._v("id")]),e._v("属性，但是最好不要这样命名。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('<p id="foo">ppppp</p>\n<script>\n    var p = document.querySelector(\'p\');\n    console.log(p.id);  // "foo"\n    p.id = "one";   // 此时ID会立刻修改\n    console.log(p.id);  // "one"\n<\/script>\n')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("ol",[t("li",[t("strong",[this._v("Element.tagName")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("Element.tagName")]),this._v("属性返回指定元素的大写标签名，与"),t("code",[this._v("nodeName")]),this._v("属性的值相等。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("<span id=\"myspan\">Hello</span>\n<script>\n    var span = document.getElementById('myspan');\n    console.log(span.tagName);\n    console.log(span.nodeName);\n<\/script>\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("ol",[t("li",[t("strong",[this._v("Element.dir")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("Element.dir")]),this._v("属性用于读写当前元素的文字方向，可能是从左到右（"),t("code",[this._v('"ltr"')]),this._v("），也可能是从右到左（"),t("code",[this._v('"rtl"')]),this._v("）。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("ol",[t("li",[t("strong",[this._v("Element.accessKey")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("Element.accessKey")]),this._v("属性用于读写分配给当前元素的快捷键。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('<button accesskey="h" id="btn">点击</button>\n<script>\n    var btn = document.getElementById(\'btn\');\n    console.log(btn.accessKey);\n<\/script>\n')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("上面代码中，"),t("code",[this._v("btn")]),this._v("元素的快捷键是"),t("code",[this._v("h")]),this._v("，按下"),t("code",[this._v("Alt + h")]),this._v("就能将焦点转移到它上面。")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ol",[n("li",[n("p",[n("strong",[e._v("Element.draggable")])]),e._v(" "),n("p",[n("code",[e._v("Element.draggable")]),e._v("属性返回一个布尔值，表示当前元素是否可拖动。该属性可读写。")])]),e._v(" "),n("li",[n("p",[n("strong",[e._v("Element.lang")])]),e._v(" "),n("p",[n("code",[e._v("Element.lang")]),e._v("属性返回当前元素的语言设置。该属性可读写。")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('// HTML 代码如下\n// <html lang="en">\ndocument.documentElement.lang // "en"\n')])])])]),e._v(" "),n("li",[n("p",[n("strong",[e._v("Element.tabIndex")])]),e._v(" "),n("p",[n("code",[e._v("Element.tabIndex")]),e._v("属性返回一个整数，表示当前元素在 Tab 键遍历时的顺序。该属性可读写。")]),e._v(" "),n("p",[n("code",[e._v("tabIndex")]),e._v("属性值如果是负值（通常是"),n("code",[e._v("-1")]),e._v("），则 Tab 键不会遍历到该元素。如果是正整数，则按照顺序，从小到大遍历。如果两个元素的"),n("code",[e._v("tabIndex")]),e._v("属性的正整数值相同，则按照出现的顺序遍历。遍历完所有"),n("code",[e._v("tabIndex")]),e._v("为正整数的元素以后，再遍历所有"),n("code",[e._v("tabIndex")]),e._v("等于"),n("code",[e._v("0")]),e._v("、或者属性值是非法值、或者没有"),n("code",[e._v("tabIndex")]),e._v("属性的元素，顺序为它们在网页中出现的顺序。")])]),e._v(" "),n("li",[n("p",[n("strong",[e._v("Element.title")])]),e._v(" "),n("p",[n("code",[e._v("Element.title")]),e._v("属性用来读写当前元素的 HTML 属性"),n("code",[e._v("title")]),e._v("。该属性通常用来指定，鼠标悬浮时弹出的文字提示框。")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('<p title="我是p" id="btn">111111</p>\n<script>\n    var btn = document.getElementById(\'btn\');\n    console.log(btn.title); // "我是p"\n<\/script>\n')])])])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"_1-2-元素状态的相关属性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-元素状态的相关属性","aria-hidden":"true"}},[this._v("#")]),this._v(" 1.2 元素状态的相关属性")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ol",[n("li",[n("p",[n("strong",[e._v("Element.hidden")])]),e._v(" "),n("p",[n("code",[e._v("Element.hidden")]),e._v("属性返回一个布尔值，表示当前元素的"),n("code",[e._v("hidden")]),e._v("属性，用来控制当前元素是否可见。该属性可读写。")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("<p title=\"我是p\" id=\"btn\">111111</p>\n<div id=\"mydiv\">我会变</div>\n<script>\n    var btn = document.getElementById('btn');\n    var mydiv = document.getElementById('mydiv');\n    btn.addEventListener('click', function () {\n        mydiv.hidden = !mydiv.hidden;\n    }, false);  // 点击btn 会切换 显示与隐藏 mydiv\n<\/script>\n")])])]),n("p",[e._v("注意，该属性与 CSS 设置是互相独立的。CSS 对这个元素可见性的设置，"),n("code",[e._v("Element.hidden")]),e._v("并不能反映出来。也就是说，这个属性并不难用来判断当前元素的实际可见性。")]),e._v(" "),n("p",[e._v("CSS 的设置高于"),n("code",[e._v("Element.hidden")]),e._v("。如果 CSS 指定了该元素不可见（"),n("code",[e._v("display: none")]),e._v("）或可见（"),n("code",[e._v("display: hidden")]),e._v("），那么"),n("code",[e._v("Element.hidden")]),e._v("并不能改变该元素实际的可见性。换言之，这个属性只在 CSS 没有明确设定当前元素的可见性时才有效。")])]),e._v(" "),n("li",[n("p",[n("strong",[e._v("Element.contentEditable，Element.isContentEditable")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('<div contenteditable id="one">123</div>\n<script>\n    var one = document.getElementById(\'one\');\n    console.log(one.contentEditable); // "true"此时页面one元素可以编辑\n    console.log(one.isContentEditable); // true \n    one.contentEditable = false;  \n    console.log(one.contentEditable); // "false"  页面不能编辑了\n    console.log(one.isContentEditable); // false\n<\/script>\n')])])]),n("p",[e._v("上面代码中，"),n("code",[e._v("<div>")]),e._v("元素有"),n("code",[e._v("contenteditable")]),e._v("属性，因此用户可以在网页上编辑这个区块的内容。")]),e._v(" "),n("p",[n("code",[e._v("Element.contentEditable")]),e._v("属性返回一个字符串，表示是否设置了"),n("code",[e._v("contenteditable")]),e._v("属性，有三种可能的值。该属性可写。")]),e._v(" "),n("blockquote",[n("p",[n("code",[e._v('"true"')]),e._v("：元素内容可编辑")]),e._v(" "),n("p",[n("code",[e._v('"false"')]),e._v("：元素内容不可编辑")]),e._v(" "),n("p",[n("code",[e._v('"inherit"')]),e._v("：元素是否可编辑，继承了父元素的设置")])]),e._v(" "),n("p",[n("code",[e._v("Element.isContentEditable")]),e._v("属性返回一个布尔值，同样表示是否设置了"),n("code",[e._v("contenteditable")]),e._v("属性。该属性只读。")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"_1-3-element-attributes"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-element-attributes","aria-hidden":"true"}},[this._v("#")]),this._v(" 1.3 Element.attributes")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("Element.attributes")]),this._v("属性返回一个类似数组的对象，成员是当前元素节点的所有属性节点")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('<p id="one" class="tt">123</p>\n<script>\n    var p = document.querySelector(\'p\');\n    var attrs = p.attributes;\n    for (var i = attrs.length - 1; i >= 0; i--) {\n        console.log(attrs[i].name + \'->\' + attrs[i].value);\n    }\n    // "class->tt"\n    // "id->one"\n<\/script>\n')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("上面代码遍历"),t("code",[this._v("p")]),this._v("元素的所有属性。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"_1-4-element-classname，element-classlist"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-element-classname，element-classlist","aria-hidden":"true"}},[this._v("#")]),this._v(" 1.4 Element.className，Element.classList")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("className")]),this._v("属性用来读写当前元素节点的"),t("code",[this._v("class")]),this._v("属性。它的值是一个字符串，每个"),t("code",[this._v("class")]),this._v("之间用空格分割。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("classList")]),this._v("属性返回一个类似数组的对象，当前元素节点的每个"),t("code",[this._v("class")]),this._v("就是这个对象的一个成员。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('<div class="one two three" id="myDiv"></div>\n<script>\n    var div = document.getElementById(\'myDiv\');\n    console.log(div.className); // "one two three"\n    console.log(div.classList); \n    // DOMTokenList(3) ["one", "two", "three", value: "one two three", length:3]\n<\/script>\n')])])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[e._v("上面代码中，"),n("code",[e._v("className")]),e._v("属性返回一个空格分隔的字符串，而"),n("code",[e._v("classList")]),e._v("属性指向一个类似数组的对象，该对象的"),n("code",[e._v("length")]),e._v("属性（只读）返回当前元素的"),n("code",[e._v("class")]),e._v("数量。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("classList")]),this._v("对象有下列方法:")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("blockquote",[n("p",[n("code",[e._v("add()")]),e._v("：增加一个 class")]),e._v(" "),n("p",[n("code",[e._v("remove()")]),e._v("：移除一个 class")]),e._v(" "),n("p",[n("code",[e._v("contains()")]),e._v("：检查当前元素是否包含某个 class")]),e._v(" "),n("p",[n("code",[e._v("toggle()")]),e._v("：将某个 class 移入或移出当前元素")]),e._v(" "),n("p",[n("code",[e._v("item()")]),e._v("：返回指定索引位置的 class")]),e._v(" "),n("p",[n("code",[e._v("toString()")]),e._v("：将 class 的列表转为字符串")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("<div class=\"one two three\" id=\"myDiv\"></div>\n<script>\n    var div = document.getElementById('myDiv');\n    div.classList.add('myCssClass');\n    div.classList.add('foo', 'bar');\n    div.classList.remove('myCssClass');\n    div.classList.toggle('myCssClass'); // 如果 myCssClass 不存在就加入，否则移除\n    div.classList.contains('myCssClass'); // 返回 true 或者 false\n    div.classList.item(0); // 返回第一个 Class\n    div.classList.toString();\n<\/script>\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("className")]),this._v("和"),t("code",[this._v("classList")]),this._v("在添加和删除某个 class 时的写法:")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("<div class=\"one\" id=\"foo\"></div>\n<script>\n    var foo = document.getElementById('foo');\n    // 添加class\n    foo.className += 'bold';\n    foo.classList.add('bold');\n    // 删除class\n    foo.classList.remove('bold');\n    foo.className = foo.className.replace(/^bold$/, '');\n<\/script>\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("toggle")]),this._v("方法可以接受一个布尔值，作为第二个参数。如果为"),t("code",[this._v("true")]),this._v("，则添加该属性；如果为"),t("code",[this._v("false")]),this._v("，则去除该属性。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("el.classList.toggle('abc', boolValue);\n\n// 等同于\nif (boolValue) {\n  el.classList.add('abc');\n} else {\n  el.classList.remove('abc');\n}\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"_1-5-element-dataset"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-element-dataset","aria-hidden":"true"}},[this._v("#")]),this._v(" 1.5 Element.dataset")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("网页元素可以自定义"),t("code",[this._v("data-")]),this._v("属性，用来添加数据。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("Element.dataset")]),this._v("属性返回一个对象，可以从这个对象读写"),t("code",[this._v("data-")]),this._v("属性。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('<div id="foo" data-columns="3" data-index-number="12314" data-parent="cars"></div>\n<script>\n    var foo = document.getElementById(\'foo\');\n    console.log(foo.dataset.columns);   // "3"\n    console.log(foo.dataset.indexNumber); // "12314"\n    console.log(foo.dataset.parent);    // "cars"\n<\/script>\n')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("注意，"),t("code",[this._v("dataset")]),this._v("上面的各个属性返回都是字符串。")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[e._v("HTML 代码中，"),n("code",[e._v("data-")]),e._v("属性的属性名，只能包含英文字母、数字、连词线（"),n("code",[e._v("-")]),e._v("）、点（"),n("code",[e._v(".")]),e._v("）、冒号（"),n("code",[e._v(":")]),e._v("）和下划线（"),n("code",[e._v("_")]),e._v("）。它们转成 JavaScript 对应的"),n("code",[e._v("dataset")]),e._v("属性名，规则如下：")])},function(){var e=this.$createElement,t=this._self._c||e;return t("blockquote",[t("p",[this._v("开头的"),t("code",[this._v("data-")]),this._v("会省略")]),this._v(" "),t("p",[this._v("如果连词线后面跟了一个英文字母，那么连词线会取消，该字母变成大写")]),this._v(" "),t("p",[this._v("其他字符不变")])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[e._v("因此，"),n("code",[e._v("data-abc-def")]),e._v("对应"),n("code",[e._v("dataset.abcDef")]),e._v("，"),n("code",[e._v("data-abc-1")]),e._v("对应"),n("code",[e._v('dataset["abc-1"]')]),e._v("。")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[e._v("除了使用"),n("code",[e._v("dataset")]),e._v("读写"),n("code",[e._v("data-")]),e._v("属性，也可以使用"),n("code",[e._v("Element.getAttribute()")]),e._v("和"),n("code",[e._v("Element.setAttribute()")]),e._v("，通过完整的属性名读写这些属性。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('<div id="foo" data-columns="3" data-index-number="12314" data-parent="cars"></div>\n<script>\n    var foo = document.getElementById(\'foo\');\n    console.log(foo.getAttribute(\'data-columns\'));    // "3"\n    console.log(foo.getAttribute(\'data-index-number\')); // "12314"\n    console.log(foo.getAttribute(\'data-parent\'));   // "cars"\n<\/script>\n')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"_1-6-element-innerhtml"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-6-element-innerhtml","aria-hidden":"true"}},[this._v("#")]),this._v(" 1.6 Element.innerHTML")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("Element.innerHTML")]),this._v("属性返回一个字符串，等同于该元素包含的所有 HTML 代码。该属性可读写，常用来设置某个节点的内容。它能改写所有元素节点的内容，包括"),t("code",[this._v("<HTML>")]),this._v("和"),t("code",[this._v("<body>")]),this._v("元素。")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[e._v("如果将"),n("code",[e._v("innerHTML")]),e._v("属性设为空，等于删除所有它包含的所有节点:"),n("code",[e._v("el.innerHTML = '';")]),e._v(",代码等于将"),n("code",[e._v("el")]),e._v("节点变成了一个空节点，"),n("code",[e._v("el")]),e._v("原来包含的节点被全部删除。")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[e._v("注意，读取属性值的时候，如果文本节点包含"),n("code",[e._v("&")]),e._v("、小于号（"),n("code",[e._v("<")]),e._v("）和大于号（"),n("code",[e._v(">")]),e._v("），"),n("code",[e._v("innerHTML")]),e._v("属性会将它们转为实体形式"),n("code",[e._v("&amp;")]),e._v("、"),n("code",[e._v("&lt;")]),e._v("、"),n("code",[e._v("&gt;")]),e._v("。如果想得到原文，建议使用"),n("code",[e._v("element.textContent")]),e._v("属性。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('<p id="para"> 5 > 3 </p>\n<script>\n    var foo = document.getElementById(\'para\')\n    console.log(foo.innerHTML);   // " 5 &gt; 3 "\n<\/script>\n')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("写入的时候，如果插入的文本包含 HTML 标签，会被解析成为节点对象插入 DOM。注意，如果文本之中含有"),t("code",[this._v("<script>")]),this._v("标签，虽然可以生成"),t("code",[this._v("script")]),this._v("节点，但是插入的代码不会执行。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("<p id=\"one\">one</p>\n<script>\n    var one = document.getElementById('one');\n    var name = \"<script>alert('haha')\\<\\/script>\";\n    one.innerHTML = name;\n    console.log(one.innerHTML);\n<\/script>\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("上面代码将脚本插入内容，脚本并不会执行。但是，"),t("code",[this._v("innerHTML")]),this._v("还是有安全风险的。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('<p id="one">one</p>\n<script>\n    var one = document.getElementById(\'one\');\n    var name = "<img src=x onerror=alert(1)>";\n    one.innerHTML = name; // 页面运行后 会弹出框\n    console.log(one.innerHTML);\n<\/script>\n')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("上面代码中，"),t("code",[this._v("alert")]),this._v("方法是会执行的。因此为了安全考虑，如果插入的是文本，最好用"),t("code",[this._v("textContent")]),this._v("属性代替"),t("code",[this._v("innerHTML")]),this._v("。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"_1-7-element-outerhtml"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-7-element-outerhtml","aria-hidden":"true"}},[this._v("#")]),this._v(" 1.7 Element.outerHTML")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("Element.outerHTML")]),this._v("属性返回一个字符串，表示当前元素节点的所有 HTML 代码，包括该元素本身和所有子元素。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('<div id="d"><p>Hello</p></div>\n<script>\n    var d = document.getElementById(\'d\');\n    console.log(d.innerHTML); // <p>Hello</p> \n    // "<p>Hello</p>"\n    console.log(d.outerHTML); // <div id="d"><p>Hello</p></div>\n    // "<div id=\\"d\\"><p>Hello</p></div>"\n<\/script>\n')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("outerHTML")]),this._v("属性是可读写的，对它进行赋值，等于替换掉当前元素。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('<div id="container"><div id="d">Hello</div></div>\n<script>\n    var container = document.getElementById(\'container\');\n    var d = document.getElementById(\'d\');\n    console.log(container.firstChild.nodeName); // "DIV"\n    console.log(d.nodeName);          // "DIV"\n    d.outerHTML = \'<p>Hello</p>\';\n    console.log(container.firstChild.nodeName); // "P"\n    console.log(d.nodeName);          // "DIV"\n<\/script>\n')])])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[e._v("上面代码中，变量"),n("code",[e._v("d")]),e._v("代表子节点，它的"),n("code",[e._v("outerHTML")]),e._v("属性重新赋值以后，内层的"),n("code",[e._v("div")]),e._v("元素就不存在了，被"),n("code",[e._v("p")]),e._v("元素替换了。但是，变量"),n("code",[e._v("d")]),e._v("依然指向原来的"),n("code",[e._v("div")]),e._v("元素，这表示被替换的"),n("code",[e._v("DIV")]),e._v("元素还存在于内存中。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("注意，如果一个节点没有父节点，设置"),t("code",[this._v("outerHTML")]),this._v("属性会报错:")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("var div = document.createElement('div');\ndiv.outerHTML = '<p>test</p>';\n// DOMException: Failed to set the 'outerHTML' property on 'Element': This element has no parent node.\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"_1-8-element-clientheight，element-clientwidth"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-8-element-clientheight，element-clientwidth","aria-hidden":"true"}},[this._v("#")]),this._v(" 1.8 Element.clientHeight，Element.clientWidth")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("Element.clientHeight")]),this._v("属性返回一个整数值，表示元素节点的 CSS 高度（单位像素），只对块级元素生效，对于行内元素返回"),t("code",[this._v("0")]),this._v("。如果块级元素没有设置 CSS 高度，则返回实际高度。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("除了元素本身的高度，它还包括"),t("code",[this._v("padding")]),this._v("部分，但是不包括"),t("code",[this._v("border")]),this._v("、"),t("code",[this._v("margin")]),this._v("。如果有水平滚动条，还要减去水平滚动条的高度。注意，这个值始终是整数，如果是小数会被四舍五入。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("Element.clientWidth")]),this._v("属性返回元素节点的 CSS 宽度，同样只对块级元素有效，也是只包括元素本身的宽度和"),t("code",[this._v("padding")]),this._v("，如果有垂直滚动条，还要减去垂直滚动条的宽度。")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[n("code",[e._v("document.documentElement")]),e._v("的"),n("code",[e._v("clientHeight")]),e._v("属性，返回当前视口的高度（即浏览器窗口的高度），等同于"),n("code",[e._v("window.innerHeight")]),e._v("属性减去水平滚动条的高度（如果有的话）。"),n("code",[e._v("document.body")]),e._v("的高度则是网页的实际高度。一般来说，"),n("code",[e._v("document.body.clientHeight")]),e._v("大于"),n("code",[e._v("document.documentElement.clientHeight")]),e._v("。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("// 视口高度\ndocument.documentElement.clientHeight\n// 网页总高度\ndocument.body.clientHeight\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"_1-9-element-clientleft，element-clienttop"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-9-element-clientleft，element-clienttop","aria-hidden":"true"}},[this._v("#")]),this._v(" 1.9 Element.clientLeft，Element.clientTop")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[n("code",[e._v("Element.clientLeft")]),e._v("属性等于元素节点左边框（left border）的宽度（单位像素），不包括左侧的"),n("code",[e._v("padding")]),e._v("和"),n("code",[e._v("margin")]),e._v("。如果没有设置左边框，或者是行内元素（"),n("code",[e._v("display: inline")]),e._v("），该属性返回"),n("code",[e._v("0")]),e._v("。该属性总是返回整数值，如果是小数，会四舍五入。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("Element.clientTop")]),this._v("属性等于网页元素顶部边框的宽度（单位像素），其他特点都与"),t("code",[this._v("clientTop")]),this._v("相同。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('<style>\n    #tt {border: 1px solid}\n    #one { border: 12px solid red; padding:10px; margin: 15px; }\n</style>\n<div id="tt">\n    <div id="one">one</div>\n</div>\n<script>\n    var one = document.getElementById(\'one\');\n    console.log(one.clientLeft);  // 12\n    console.log(one.clientTop);   // 12\n<\/script>\n')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"_1-10-element-scrollheight，element-scrollwidth"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-10-element-scrollheight，element-scrollwidth","aria-hidden":"true"}},[this._v("#")]),this._v(" 1.10 Element.scrollHeight，Element.scrollWidth")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[n("code",[e._v("Element.scrollHeight")]),e._v("属性返回一个整数值（小数会四舍五入），表示当前元素的总高度（单位像素），包括溢出容器、当前不可见的部分。它包括"),n("code",[e._v("padding")]),e._v("，但是不包括"),n("code",[e._v("border")]),e._v("、"),n("code",[e._v("margin")]),e._v("以及水平滚动条的高度（如果有水平滚动条的话），还包括伪元素（"),n("code",[e._v("::before")]),e._v("或"),n("code",[e._v("::after")]),e._v("）的高度。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("Element.scrollWidth")]),this._v("属性表示当前元素的总宽度（单位像素），其他地方都与"),t("code",[this._v("scrollHeight")]),this._v("属性类似。这两个属性只读。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("整张网页的总高度可以从"),t("code",[this._v("document.documentElement")]),this._v("或"),t("code",[this._v("document.body")]),this._v("上读取。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("<style>\n    #tt { border: 1px solid; height: 100px; width: 200px;  overflow: scroll; }\n</style>\n<div id=\"tt\">\n    <p>123ssssaaaaaaaaaaaaaaaaaaaaaa</p>\n    <p>123</p><p>123</p><p>123</p>\n    <p>123</p><p>123</p><p>123</p><p>123</p>\n</div>\n<script>\n    var tt = document.getElementById('tt');\n    console.log(tt.clientHeight); // 85\n    console.log(tt.clientWidth);  // 185\n    console.log(tt.scrollHeight); // 320\n    console.log(tt.scrollWidth);  // 255\n<\/script>\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("注意，如果元素节点的内容出现溢出，即使溢出的内容是隐藏的，"),t("code",[this._v("scrollHeight")]),this._v("属性仍然返回元素的总高度。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("上面的代码中，即使tt元素的CSS高度只有100像素，且溢出部分不可见，但是"),t("code",[this._v("scrollHeight")]),this._v("仍然会返回该元素的原始高度。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"_1-11-element-scrollleft，element-scrolltop"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-11-element-scrollleft，element-scrolltop","aria-hidden":"true"}},[this._v("#")]),this._v(" 1.11 Element.scrollLeft，Element.scrollTop")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("Element.scrollLeft")]),this._v("属性表示当前元素的水平滚动条向右侧滚动的像素数量，"),t("code",[this._v("Element.scrollTop")]),this._v("属性表示当前元素的垂直滚动条向下滚动的像素数量。对于那些没有滚动条的网页元素，这两个属性总是等于0。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("如果要查看整张网页的水平的和垂直的滚动距离，要从"),t("code",[this._v("document.documentElement")]),this._v("元素上读取。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('<style>\n    #tt { border: 1px solid; height: 100px; width: 200px;  overflow: scroll; }\n</style>\n<div id="tt">\n    <p>123ssssaaaaaaaaaaaaaaaaaaaaaa</p>\n    <p>123</p><p>123</p><p>123</p>\n    <p>123</p><p>123</p><p>123</p><p>123</p>\n</div>\n  <button>我是按钮</button>\n  <script>\n    var tt = document.getElementById(\'tt\');\n    var btn = document.querySelector("button");\n    btn.onclick = function() {\n      console.log(tt.scrollLeft); // 0 \n      console.log(tt.scrollTop);  // 0\n      tt.scrollLeft = "40";     // 执行后横向滚动条会移动到中间位置(大约)\n    }\n    // 读取整张网页的水平的和垂直的滚动距离\n    console.log(document.documentElement.scrollLeft)\n    console.log(document.documentElement.scrollLeft)\n  <\/script>\n')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"_1-12-element-offsetparent"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-12-element-offsetparent","aria-hidden":"true"}},[this._v("#")]),this._v(" 1.12 Element.offsetParent")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("Element.offsetParent")]),this._v("属性返回最靠近当前元素的、并且 CSS 的"),t("code",[this._v("position")]),this._v("属性不等于"),t("code",[this._v("static")]),this._v("的上层元素。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("该属性主要用于确定子元素位置偏移的计算基准，"),t("code",[this._v("Element.offsetTop")]),this._v("和"),t("code",[this._v("Element.offsetLeft")]),this._v("就是根据"),t("code",[this._v("offsetParent")]),this._v("元素的距离计算的。")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[e._v("如果该元素是不可见的（"),n("code",[e._v("display")]),e._v("属性为"),n("code",[e._v("none")]),e._v("），或者位置是固定的（"),n("code",[e._v("position")]),e._v("属性为"),n("code",[e._v("fixed")]),e._v("），则"),n("code",[e._v("offsetParent")]),e._v("属性返回"),n("code",[e._v("null")]),e._v("。")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[e._v("如果某个元素的所有上层节点的"),n("code",[e._v("position")]),e._v("属性都是"),n("code",[e._v("static")]),e._v("，则"),n("code",[e._v("Element.offsetParent")]),e._v("属性指向"),n("code",[e._v("<body>")]),e._v("元素。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('<style>\n    #tt { border: 1px solid; height: 100px; width: 200px;  overflow: scroll; }\n</style>\n\n<div id="tt" style="position: relative;">\n    <p>\n        <span id="one">Hello</span>\n    </p>\n    <p>\n        <span id="two" style="display: none;">Hello</span>\n    </p>\n</div>\n<span id="three">333</span>\n<script>\n    var one = document.getElementById(\'one\');\n    var two = document.getElementById(\'two\');\n    var three = document.getElementById(\'three\');\n    console.log(one.offsetParent);  // <div  id="tt" ......\n    console.log(two.offsetParent) // null\n    console.log(three.offsetParent) // <body> ......\n<\/script>\n')])])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[e._v("上面的代码中，id为"),n("code",[e._v("one")]),e._v("的元素的"),n("code",[e._v("offsetParent")]),e._v("属性就是id为"),n("code",[e._v("tt")]),e._v("的"),n("code",[e._v("div")]),e._v("元素。")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[e._v("上面的代码中，id为"),n("code",[e._v("two")]),e._v("的"),n("code",[e._v("span")]),e._v("元素的"),n("code",[e._v("offsetParent")]),e._v("属性是"),n("code",[e._v("null")]),e._v("。")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[e._v("上面的代码中，id为"),n("code",[e._v("three")]),e._v("的"),n("code",[e._v("span")]),e._v("元素的"),n("code",[e._v("offsetParent")]),e._v("属性是"),n("code",[e._v("body")]),e._v("元素。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"_1-13-element-offsetheight，element-offsetwidth"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-13-element-offsetheight，element-offsetwidth","aria-hidden":"true"}},[this._v("#")]),this._v(" 1.13 Element.offsetHeight，Element.offsetWidth")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("Element.offsetHeight")]),this._v("属性返回一个整数，表示元素的 CSS 垂直高度（单位像素），包括元素本身的高度、padding 和 border，以及水平滚动条（如果存在且渲染的话），不包含:before或:after等伪类元素的高度。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("Element.offsetWidth")]),this._v("属性表示元素的 CSS 水平宽度（单位像素），其他都与"),t("code",[this._v("Element.offsetHeight")]),this._v("一致。")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[e._v("这两个属性都是只读属性，只比"),n("code",[e._v("Element.clientHeight")]),e._v("和"),n("code",[e._v("Element.clientWidth")]),e._v("多了边框的高度或宽度。如果元素的 CSS 设为不可见（比如"),n("code",[e._v("display: none;")]),e._v("），则返回"),n("code",[e._v("0")]),e._v("。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("<style>\n    #tt { border: 5px solid; height: 100px; width: 200px; padding: 5px; overflow: scroll; }\n</style>\n<div id=\"tt\">\n    <p>123ssssaaaaaaaaaaaaaaaaaaaaaa</p>\n    <p>123</p><p>123</p><p>123</p>\n    <p>123</p><p>123</p><p>123</p><p>123</p>\n</div>\n<script>\n    var tt = document.getElementById('tt');\n    console.log(tt.clientHeight); // 95\n    console.log(tt.clientWidth);  // 195\n    console.log(tt.scrollHeight); // 330\n    console.log(tt.scrollWidth);  // 260\n    console.log(tt.offsetHeight); // 120\n    console.log(tt.offsetWidth ); // 220\n<\/script>\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"_1-14-element-offsetleft，element-offsettop"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-14-element-offsetleft，element-offsettop","aria-hidden":"true"}},[this._v("#")]),this._v(" 1.14 Element.offsetLeft，Element.offsetTop")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("Element.offsetLeft")]),this._v("返回当前元素左上角相对于"),t("code",[this._v("Element.offsetParent")]),this._v("节点的水平位移，"),t("code",[this._v("Element.offsetTop")]),this._v("返回垂直位移，单位为像素。通常，这两个值是指相对于父节点的位移。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('<style>\n    body { margin: 0; }\n    .one { border: 1px solid; height: 300px; width: 300px;\n        overflow: scroll; position: relative;\n    }\n    p { margin: 30px 0; border: 1px solid red; }\n</style>\n<p>123</p>\n<div class="one">\n    <p>1</p><p>2</p><p>3</p> <p>4</p><p>5</p><p>6</p>\n    <p>7</p><p>8</p><p>9</p> <p>10</p><p>11</p><p>12</p>\n    <p>13</p>dddddddd <span class=f>ffffffffffffffffffffffffff</span><p>14</p>\n    <p>15</p><p>16</p><p>17</p> <p>18</p><p>19</p><p>20</p>\n</div>\n<script>\n    var one = document.querySelector(".one");\n    var f = document.querySelector(".f");\n    // one.scrollTop = f.offsetTop; 设置 直接滚动到指定位置\n    console.log(f.offsetLeft) // 80\n    console.log(f.offsetTop)  // 732\n<\/script>\n')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("function getElementPosition(e) {\n  var x = 0;\n  var y = 0;\n  while (e !== null)  {\n    x += e.offsetLeft;\n    y += e.offsetTop;\n    e = e.offsetParent; // 这个是重点，每次循环都找到offsetParent\n  }\n  return {x: x, y: y};\n}\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('<style>\n    body { margin: 0; border: 1px solid;}    \n    p { margin: 30px 0; border: 1px solid red; }\n  </style>\n  <p>123</p>\n  <div> <p>内部</p>\n    <div> <p>又一个内部</p\n      <div> <p id="one">又一个</p>\n      </div>\n    </div>\n  </div>\n  <script>\n      var one = document.querySelector("#one");\n      console.log(one.offsetTop);\n      function getElementPosition(e) {\n        var x = 0; var y = 0;\n        while (e !== null)  {\n          x += e.offsetLeft; y += e.offsetTop; e = e.offsetParent;\n        }\n        return {x: x, y: y};\n      }\n    var tmp = getElementPosition(one);\n    console.log(tmp.x)  // 1\n    console.log(tmp.y)  // 193\n  <\/script>\n')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"_1-15-element-style"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-15-element-style","aria-hidden":"true"}},[this._v("#")]),this._v(" 1.15 Element.style")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("每个元素节点都有"),t("code",[this._v("style")]),this._v("用来读写该元素的行内样式信息")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("由于 "),t("code",[this._v("style")]),this._v(" 属性的优先级和通过style设置内联样式是一样的，并且在css层级样式中拥有最高优先级，因此在为特定的元素设置样式时很有用。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"_1-16-element-children，element-childelementcount"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-16-element-children，element-childelementcount","aria-hidden":"true"}},[this._v("#")]),this._v(" 1.16 Element.children，Element.childElementCount")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("Element.children")]),this._v("属性返回一个类似数组的对象（"),t("code",[this._v("HTMLCollection")]),this._v("实例），包括当前元素节点的所有子元素。如果当前元素没有子元素，则返回的对象包含零个成员。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("Element.children")]),this._v("属性与"),t("code",[this._v("Node.childNodes")]),this._v("属性的区别是，它只包括元素类型的子节点，不包括其他类型的子节点。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("Element.childElementCount")]),this._v("属性返回当前元素节点包含的子元素节点的个数，与"),t("code",[this._v("Element.children.length")]),this._v("的值相同。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('<div id="one">\n    <span>1 </span><span>2 </span><span>3 </span>\n</div>\n<div id="two"></div>\n<script>\n    var one = document.getElementById("one");\n    var two = document.getElementById("two");\n    if (one.children.length) {\n        var children = one.children;\n        for (var i = 0; i < children.length; i++){\n            console.log(children[i]);\n        }\n    }\n    // <span>1 </span>\n    // <span>2 </span>\n    // <span>3 </span>\n    console.log(two.children);  // HTMLCollection []\n<\/script>\n')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"_1-17-element-firstelementchild，element-lastelementchild"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-17-element-firstelementchild，element-lastelementchild","aria-hidden":"true"}},[this._v("#")]),this._v(" 1.17 Element.firstElementChild，Element.lastElementChild")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("Element.firstElementChild")]),this._v("属性返回当前元素的第一个元素子节点。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("Element.lastElementChild")]),this._v("返回最后一个元素子节点。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("如果没有元素子节点，这两个属性返回"),t("code",[this._v("null")]),this._v("。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('<div id="one">\n    <span>1 </span><span>2 </span><span>3 </span>\n  </div>\n  <div id="two"></div>\n  <script>\n    var one = document.getElementById("one");\n    var two = document.getElementById("two");\n    console.log(one.firstElementChild); // <span>1 </span>\n    console.log(one.lastElementChild);  // <span>3 </span>\n    console.log(two.firstElementChild); // null\n    console.log(two.lastElementChild);  // null\n  <\/script>\n')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"_1-18-element-nextelementsibling，element-previouselementsibling"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-18-element-nextelementsibling，element-previouselementsibling","aria-hidden":"true"}},[this._v("#")]),this._v(" 1.18 Element.nextElementSibling，Element.previousElementSibling")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("Element.nextElementSibling")]),this._v("属性返回当前元素节点的后一个同级元素节点，如果没有则返回"),t("code",[this._v("null")]),this._v("。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("Element.previousElementSibling")]),this._v("属性返回当前元素节点的前一个同级元素节点，如果没有则返回"),t("code",[this._v("null")]),this._v("。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('<div id="tt">\n    <div id="div-01">Here is div-01</div>\n    <div id="div-02">Here is div-02</div>\n  </div>\n  <script>\n    var one = document.getElementById(\'div-01\');\n    var two = document.getElementById("div-02");\n    console.log(one.nextElementSibling);  // <div id="div-02">Here is div-02</div>\n    console.log(two.nextElementSibling);  // null\n    console.log(one.previousElementSibling);// null\n    console.log(two.previousElementSibling);// <div id="div-01">Here is div-01</div>\n  <\/script>\n')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"_2-实例方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-实例方法","aria-hidden":"true"}},[this._v("#")]),this._v(" 2. 实例方法")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"_2-1-属性相关方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-属性相关方法","aria-hidden":"true"}},[this._v("#")]),this._v(" 2.1 属性相关方法")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ul",[n("li",[n("code",[e._v("getAttribute()")]),e._v("：读取某个属性的值")]),e._v(" "),n("li",[n("code",[e._v("getAttributeNames()")]),e._v("：返回当前元素的所有属性名")]),e._v(" "),n("li",[n("code",[e._v("setAttribute()")]),e._v("：写入属性值")]),e._v(" "),n("li",[n("code",[e._v("hasAttribute()")]),e._v("：某个属性是否存在")]),e._v(" "),n("li",[n("code",[e._v("hasAttributes()")]),e._v("：当前元素是否有属性")]),e._v(" "),n("li",[n("code",[e._v("removeAttribute()")]),e._v("：删除属性")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"_2-1-element-queryselector"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-element-queryselector","aria-hidden":"true"}},[this._v("#")]),this._v(" 2.1 Element.querySelector()")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("Element.querySelector")]),this._v("方法接受 CSS 选择器作为参数，返回父元素的第一个匹配的子元素。如果没有找到匹配的子元素，就返回"),t("code",[this._v("null")]),this._v("。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('<div id="tt">\n    <div>123</div> <p>p</p> <p>2p</p>\n</div>\n<script>\n    var one = document.getElementById(\'tt\');\n    var p = one.querySelector("p");\n    console.log(p); // <p>p</p>\n<\/script>\n')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("上面代码返回"),t("code",[this._v("content")]),this._v("节点的第一个"),t("code",[this._v("p")]),this._v("元素。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("Element.querySelector")]),this._v("方法可以接受任何复杂的 CSS 选择器。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("document.body.querySelector(\"style[type='text/css'], style:not([type])\");\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("element.querySelector('div, p');\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("上面代码返回"),t("code",[this._v("element")]),this._v("的第一个"),t("code",[this._v("div")]),this._v("或"),t("code",[this._v("p")]),this._v("子元素。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("需要注意的是，浏览器执行"),t("code",[this._v("querySelector")]),this._v("方法时，是先在全局范围内搜索给定的 CSS 选择器，然后过滤出哪些属于当前元素的子元素。因此，会有一些违反直觉的结果，下面是一段 HTML 代码。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("<div>\n    <blockquote id=\"outer\">\n        <p>Hello</p>\n        <div id=\"inner\">\n            <p>World</p>\n        </div>\n    </blockquote>\n</div>\n<script>\n    var outer = document.getElementById('outer');\n    var p = outer.querySelector('div p')\n    console.log(p); // <p>Hello</p>\n<\/script>\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("上面的代码实际上返回的是第一个"),t("code",[this._v("p")]),this._v("元素，而不是第二个。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"_2-3-element-queryselectorall"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-element-queryselectorall","aria-hidden":"true"}},[this._v("#")]),this._v(" 2.3 Element.querySelectorAll()")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("Element.querySelectorAll")]),this._v("方法接受 CSS 选择器作为参数，返回一个"),t("code",[this._v("NodeList")]),this._v("实例，包含所有匹配的子元素。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("该方法的执行机制与"),t("code",[this._v("querySelector")]),this._v("方法相同，也是先在全局范围内查找，再过滤出当前元素的子元素。因此，选择器实际上针对整个文档的。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("它也可以接受多个 CSS 选择器，它们之间使用逗号分隔。如果选择器里面有伪元素的选择器，则总是返回一个空的"),t("code",[this._v("NodeList")]),this._v("实例。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('<div id="one">\n    <div class="tt"><p>tt</p></div>\n    <div id="two">\n        <p>1</p> <p>2</p> <p>3</p>\n        <p>4</p> <p>5</p>\n    </div>\n</div>\n<script>\n    var one = document.getElementById(\'one\');\n    var p = one.querySelectorAll(\'div#two > p\')\n    console.log(p); // NodeList(5) [p, p, p, p, p]\n<\/script>\n')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"_2-4-element-getelementsbyclassname"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-element-getelementsbyclassname","aria-hidden":"true"}},[this._v("#")]),this._v(" 2.4 Element.getElementsByClassName()")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("Element.getElementsByClassName")]),this._v("方法返回一个"),t("code",[this._v("HTMLCollection")]),this._v("实例，成员是当前元素节点的所有具有指定 class 的子元素节点。该方法与"),t("code",[this._v("document.getElementsByClassName")]),this._v("方法的用法类似，只是搜索范围不是整个文档，而是当前元素节点。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("由于"),t("code",[this._v("HTMLCollection")]),this._v("实例是一个活的集合，"),t("code",[this._v("document")]),this._v("对象的任何变化会立刻反应到实例，下面的代码不会生效。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('<div id="example">\n    <p class="foo">123</p>\n    <p class="foo">abc</p>\n</div>\n<script>\n    var element = document.getElementById(\'example\');\n    var matches = element.getElementsByClassName(\'foo\');\n    for (var i = 0; i< matches.length; i++) {\n        matches[i].classList.remove(\'foo\');\n        matches.item(i).classList.add(\'bar\');\n    }\n    // 执行后，HTML 代码如下\n    // <div id="example">\n    //   <p></p>\n    //   <p class="foo bar"></p>\n    // </div>\n<\/script>\n')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("上面代码中，"),t("code",[this._v("matches")]),this._v("集合的第一个成员，一旦被拿掉 class 里面的"),t("code",[this._v("foo")]),this._v("，就会立刻从"),t("code",[this._v("matches")]),this._v("里面消失，导致出现上面的结果。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"_2-5-element-getelementsbytagname"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-element-getelementsbytagname","aria-hidden":"true"}},[this._v("#")]),this._v(" 2.5 Element.getElementsByTagName()")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("Element.getElementsByTagName")]),this._v("方法返回一个"),t("code",[this._v("HTMLCollection")]),this._v("实例，成员是当前节点的所有匹配指定标签名的子元素节点。该方法与"),t("code",[this._v("document.getElementsByClassName")]),this._v("方法的用法类似，只是搜索范围不是整个文档，而是当前元素节点。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('<div id="one">\n    <p id="foo">123</p>\n    <p class="foo">abc</p>\n</div>\n<script>\n    var one = document.getElementById(\'one\');\n    var foo = document.getElementById("foo");\n    var p = one.getElementsByTagName(\'p\');\n    console.log(p);\n    one.removeChild(foo);\n    console.log(p);\n<\/script>\n')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"_2-6-element-closest"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-6-element-closest","aria-hidden":"true"}},[this._v("#")]),this._v(" 2.6 Element.closest()")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("Element.closest")]),this._v("方法接受一个 CSS 选择器作为参数，返回匹配该选择器的、最接近当前节点的一个祖先节点（包括当前节点本身）。如果没有任何节点匹配 CSS 选择器，则返回"),t("code",[this._v("null")]),this._v("。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('<article>\n    <div id="div-01">Here is div-01\n        <div id="div-02">Here is div-02\n            <div id="div-03">Here is div-03</div>\n        </div>\n    </div>\n</article>\n<script>\n    var div03 = document.getElementById(\'div-03\');\n    console.log(div03.closest("#div-02"));    // div-02\n    console.log(div03.closest("div div"));    // div-03\n    console.log(div03.closest("article > div"));//div-01\n    console.log(div03.closest(":not(div)"));  // article\n<\/script>\n')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("上面代码中，由于"),t("code",[this._v("closest")]),this._v("方法将当前节点也考虑在内，所以第二个"),t("code",[this._v("closest")]),this._v("方法返回"),t("code",[this._v("div-03")]),this._v("。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"_2-7-element-matches"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-7-element-matches","aria-hidden":"true"}},[this._v("#")]),this._v(" 2.7 Element.matches()")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("Element.matches")]),this._v("方法返回一个布尔值，表示当前元素是否匹配给定的 CSS 选择器。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('<div class="one two" id="tt">one</div>\n<script>\n    var tt = document.getElementById(\'tt\');\n    console.log(tt.matches(".two"));  // true\n    console.log(tt.matches(".three"));  // false\n    console.log(tt.matches("#tt"));   // true\n    console.log(tt.matches("#ee"));   // false\n<\/script>\n')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"_2-8-事件相关方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-8-事件相关方法","aria-hidden":"true"}},[this._v("#")]),this._v(" 2.8 事件相关方法")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("以下三个方法与"),t("code",[this._v("Element")]),this._v("节点的事件相关。这些方法都继承自"),t("code",[this._v("EventTarget")]),this._v("接口，详见相关章节。")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ul",[n("li",[n("code",[e._v("Element.addEventListener()")]),e._v("：添加事件的回调函数")]),e._v(" "),n("li",[n("code",[e._v("Element.removeEventListener()")]),e._v("：移除事件监听函数")]),e._v(" "),n("li",[n("code",[e._v("Element.dispatchEvent()")]),e._v("：触发事件")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("element.addEventListener('click', listener, false);\nelement.removeEventListener('click', listener, false);\n\nvar event = new Event('click');\nelement.dispatchEvent(event);\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"_2-9-element-scrollintoview"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-9-element-scrollintoview","aria-hidden":"true"}},[this._v("#")]),this._v(" 2.9 Element.scrollIntoView()")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("Element.scrollIntoView")]),this._v("方法滚动当前元素，进入浏览器的可见区域，类似于设置"),t("code",[this._v("window.location.hash")]),this._v("的效果。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("如果为"),t("code",[this._v("true")]),this._v("，表示元素的顶部与当前区域的可见部分的顶部对齐（前提是当前区域可滚动）；")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("如果为"),t("code",[this._v("false")]),this._v("，表示元素的底部与当前区域的可见部分的尾部对齐（前提是当前区域可滚动）。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("如果没有提供该参数，默认为"),t("code",[this._v("true")]),this._v("。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('<style>\n    body { margin: 0; }\n    .one { border: 1px solid; height: 300px; width: 300px;\n        overflow: scroll; position: relative;\n    }\n    p { margin: 30px 0; border: 1px solid red; }\n</style>\n<p>123</p>\n<div class="one">\n    <p>1</p><p>2</p><p>3</p> <p>4</p><p>5</p><p>6</p>\n    <p>7</p><p>8</p><p>9</p> <p>10</p><p>11</p><p>12</p>\n    <p>13</p>dddddddd <span class=f>ffffffffffffffffffffffffff</span><p>14</p>\n    <p>15</p><p>16</p><p>17</p> <p>18</p><p>19</p><p>20</p>\n</div>\n<script>\n    var one = document.querySelector(".one");\n    var f = document.querySelector(".f");\n    f.scrollIntoView();   // f移动到了one内部的可见区域顶部 \n    f.scrollIntoView(false);// f移动到了one内部的可见区域底部\n<\/script>\n')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"_2-10-element-getboundingclientrect"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-10-element-getboundingclientrect","aria-hidden":"true"}},[this._v("#")]),this._v(" 2.10 Element.getBoundingClientRect()")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("Element.getBoundingClientRect")]),this._v("方法返回一个对象，提供当前元素节点的大小、位置等信息，基本上就是 CSS 盒状模型的所有信息。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('<style>\n    body { margin: 0; }\n    .one { border: 1px solid; height: 300px; width: 300px;\n    }\n</style>\n<p>ss</p>\n<div class="one">\n    <p>123</p>\n</div>\n<script>\n    var one = document.querySelector(".one");\n    var ret = one.getBoundingClientRect();\n    console.log(ret); // DOMRect {x: 0, y: 54, width: 302, height: 302, top: 54, …}\n    console.log(Object.keys(ret));  // []\n<\/script>\n')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("上面代码中，"),t("code",[this._v("getBoundingClientRect")]),this._v("方法返回的"),t("code",[this._v("rect")]),this._v("对象，具有以下属性（全部为只读）。")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ul",[n("li",[n("code",[e._v("x")]),e._v("：元素左上角相对于视口的横坐标")]),e._v(" "),n("li",[n("code",[e._v("y")]),e._v("：元素左上角相对于视口的纵坐标")]),e._v(" "),n("li",[n("code",[e._v("height")]),e._v("：元素高度")]),e._v(" "),n("li",[n("code",[e._v("width")]),e._v("：元素宽度")]),e._v(" "),n("li",[n("code",[e._v("left")]),e._v("：元素左上角相对于视口的横坐标，与"),n("code",[e._v("x")]),e._v("属性相等")]),e._v(" "),n("li",[n("code",[e._v("right")]),e._v("：元素右边界相对于视口的横坐标（等于"),n("code",[e._v("x + width")]),e._v("）")]),e._v(" "),n("li",[n("code",[e._v("top")]),e._v("：元素顶部相对于视口的纵坐标，与"),n("code",[e._v("y")]),e._v("属性相等")]),e._v(" "),n("li",[n("code",[e._v("bottom")]),e._v("：元素底部相对于视口的纵坐标（等于"),n("code",[e._v("y + height")]),e._v("）")])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[e._v("由于元素相对于视口（viewport）的位置，会随着页面滚动变化，因此表示位置的四个属性值，都不是固定不变的。如果想得到绝对位置，可以将"),n("code",[e._v("left")]),e._v("属性加上"),n("code",[e._v("window.scrollX")]),e._v("，"),n("code",[e._v("top")]),e._v("属性加上"),n("code",[e._v("window.scrollY")]),e._v("。")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[e._v("注意，"),n("code",[e._v("getBoundingClientRect")]),e._v("方法的所有属性，都把边框（"),n("code",[e._v("border")]),e._v("属性）算作元素的一部分。也就是说，都是从边框外缘的各个点来计算。因此，"),n("code",[e._v("width")]),e._v("和"),n("code",[e._v("height")]),e._v("包括了元素本身 + "),n("code",[e._v("padding")]),e._v(" + "),n("code",[e._v("border")]),e._v("。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("另外，上面的这些属性，都是继承自原型的属性，"),t("code",[this._v("Object.keys")]),this._v("会返回一个空数组，这一点也需要注意。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("上面代码中，"),t("code",[this._v("ret")]),this._v("对象没有自身属性，而"),t("code",[this._v("Object.keys")]),this._v("方法只返回对象自身的属性，所以返回了一个空数组。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"_2-11-element-getclientrects"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-11-element-getclientrects","aria-hidden":"true"}},[this._v("#")]),this._v(" 2.11 Element.getClientRects()")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[n("code",[e._v("Element.getClientRects")]),e._v("方法返回一个类似数组的对象，里面是当前元素在页面上形成的所有矩形（所以方法名中的"),n("code",[e._v("Rect")]),e._v("用的是复数）。每个矩形都有"),n("code",[e._v("bottom")]),e._v("、"),n("code",[e._v("height")]),e._v("、"),n("code",[e._v("left")]),e._v("、"),n("code",[e._v("right")]),e._v("、"),n("code",[e._v("top")]),e._v("和"),n("code",[e._v("width")]),e._v("六个属性，表示它们相对于视口的四个坐标，以及本身的高度和宽度。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("对于盒状元素（比如"),t("code",[this._v("<div>")]),this._v("和"),t("code",[this._v("<p>")]),this._v("），该方法返回的对象中只有该元素一个成员。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("对于行内元素（比如"),t("code",[this._v("<span>")]),this._v("、"),t("code",[this._v("<a>")]),this._v("、"),t("code",[this._v("<em>")]),this._v("），该方法返回的对象有多少个成员(经过chrome浏览器测试)：")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("而"),t("code",[this._v("Element.getBoundingClientRect()")]),this._v("方法对于行内元素总是返回一个矩形对象。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('<style>\n    HTML, body {margin: 0;}\n    .one {\n        width: 800px; border: 1px solid; font-size: 15px;\n    }\n</style>\n<div class="one">\n    <span id="inline">\n        Hello World\n        Element.getClientRects\n        方法返回一个类似数组的对象Element.getClientRects方法返回一个类似数组的对象Ele\n    </span>\n</div>\n<script>\n    var el = document.getElementById(\'inline\');\n    console.log(el.getClientRects().length);// 4\n    console.log(el.getClientRects());   // 1\n    // DOMRectList {0: DOMRect, 1: DOMRect, 2: DOMRect, 3: DOMRect, length: 4}\n    console.log(el.getBoundingClientRect());\n    // DOMRect {x: 1, y: 1, width: 790.71875, height: 42, top: 1, …}\n<\/script>\n')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"_2-12-element-insertadjacentelement"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-12-element-insertadjacentelement","aria-hidden":"true"}},[this._v("#")]),this._v(" 2.12 Element.insertAdjacentElement()")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("Element.insertAdjacentElement")]),this._v("方法在相对于当前元素的指定位置，插入一个新的节点。该方法返回被插入的节点，如果插入失败，返回"),t("code",[this._v("null")]),this._v("。")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("blockquote",[n("ul",[n("li",[n("code",[e._v("beforebegin")]),e._v("：当前元素之前")]),e._v(" "),n("li",[n("code",[e._v("afterbegin")]),e._v("：当前元素内部的第一个子节点前面")]),e._v(" "),n("li",[n("code",[e._v("beforeend")]),e._v("：当前元素内部的最后一个子节点后面")]),e._v(" "),n("li",[n("code",[e._v("afterend")]),e._v("：当前元素之后")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("注意，"),t("code",[this._v("beforebegin")]),this._v("和"),t("code",[this._v("afterend")]),this._v("这两个值，只在当前节点有父节点时才会生效。如果当前节点是由脚本创建的，没有父节点，那么插入会失败。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("<p id=\"pp\">我是pp</p>\n<div id=\"one\"> 123</div>\n<script>\n    var one = document.getElementById('one');\n    var pp = document.getElementById('pp');\n    var p1 = document.createElement('p');\n    var p2 = document.createElement('p');\n    p2.innerText = 'p2q';\n    tt = p1.insertAdjacentElement('afterend', p2);\n    dd = one.insertAdjacentElement('afterend', p2);\n    ff = one.insertAdjacentElement('afterend', pp);// 这里会把 pp移动到div里面\n    console.log(tt);// null\n    console.log(dd);// <p>p2q</p>\n    console.log(ff);// <p id=\"pp\">我是pp</p>\n<\/script>\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"_2-13-element-insertadjacenthtml-，element-insertadjacenttext"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-13-element-insertadjacenthtml-，element-insertadjacenttext","aria-hidden":"true"}},[this._v("#")]),this._v(" 2.13 Element.insertAdjacentHTML()，Element.insertAdjacentText()")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("Element.insertAdjacentHTML")]),this._v("方法用于将一个 HTML 字符串，解析生成 DOM 结构，插入相对于当前节点的指定位置。")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("blockquote",[n("ul",[n("li",[n("code",[e._v("beforebegin")]),e._v("：当前元素之前")]),e._v(" "),n("li",[n("code",[e._v("afterbegin")]),e._v("：当前元素内部的第一个子节点前面")]),e._v(" "),n("li",[n("code",[e._v("beforeend")]),e._v("：当前元素内部的最后一个子节点后面")]),e._v(" "),n("li",[n("code",[e._v("afterend")]),e._v("：当前元素之后")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("该方法只是在现有的 DOM 结构里面插入节点，这使得它的执行速度比"),t("code",[this._v("innerHTML")]),this._v("方法快得多。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("Element.insertAdjacentText")]),this._v("方法在相对于当前节点的指定位置，插入一个文本节点，用法与"),t("code",[this._v("Element.insertAdjacentHTML")]),this._v("方法完全一致。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("<div id=\"one\">one</div>\n<div id=\"two\">two</div>\n<script>\n    var one = document.getElementById('one');\n    var two = document.getElementById('two');\n    one.insertAdjacentHTML('beforeend', '<p id=\"pt\">pp</p>');\n    one.insertAdjacentHTML('beforeend', '<>   1');\n    two.insertAdjacentText('beforeend', '<p id=\"pt\">pp</p>');\n    two.insertAdjacentText('beforeend', '<>   1');\n    \n    // HTML 代码：<div id=\"one\">one</div>\n    var d1 = document.getElementById('one');\n    d1.insertAdjacentHTML('afterend', '<div id=\"two\">two</div>');\n    // 执行后的 HTML 代码：\n    // <div id=\"one\">one</div><div id=\"two\">two</div>\n    \n    // HTML 代码：<div id=\"one\">one</div>\n    var d1 = document.getElementById('one');\n    d1.insertAdjacentText('afterend', 'two');\n    // 执行后的 HTML 代码：\n    // <div id=\"one\">one</div>two\n<\/script>\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"_2-14-element-remove"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-14-element-remove","aria-hidden":"true"}},[this._v("#")]),this._v(" 2.14 Element.remove()")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("Element.remove")]),this._v("方法继承自 ChildNode 接口，用于将当前元素节点从它的父节点移除。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("3<div id=\"one\">one</div>4\n<script>\n    var one = document.getElementById('one');\n    tt = one.remove();  // one从HTML中删除\n    console.log(tt)   // undefined\n<\/script>\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"_2-15-element-focus-，element-blur"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-15-element-focus-，element-blur","aria-hidden":"true"}},[this._v("#")]),this._v(" 2.15 Element.focus()，Element.blur()")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("Element.focus")]),this._v("方法用于将当前页面的焦点，转移到指定元素上。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("该方法可以接受一个对象作为参数。参数对象的"),t("code",[this._v("preventScroll")]),this._v("属性是一个布尔值，指定是否将当前元素停留在原始位置，而不是滚动到可见区域。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("function getFocus() {\n  document.getElementById('btn').focus({preventScroll:false});\n}\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("上面代码会让"),t("code",[this._v("btn")]),this._v("元素获得焦点，并滚动到可见区域。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("最后，从"),t("code",[this._v("document.activeElement")]),this._v("属性可以得到当前获得焦点的元素。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("Element.blur")]),this._v("方法用于将焦点从当前元素移除。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('<div>123:<input id="one" type="text"></div>\n<div>ppp:<input id="two" type="text"></div>\n<script>\n    var one = document.getElementById(\'one\');\n    one.focus();  // one 输入框会获取焦点\n    console.log(document.activeElement);// 可以得到有焦点的元素\n    //     one.blur();\n<\/script>\n')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"_2-16-element-click"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-16-element-click","aria-hidden":"true"}},[this._v("#")]),this._v(" 2.16 Element.click()")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("Element.click")]),this._v("方法用于在当前元素上模拟一次鼠标点击，相当于触发了"),t("code",[this._v("click")]),this._v("事件。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"_3-参考资料"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-参考资料","aria-hidden":"true"}},[this._v("#")]),this._v(" 3. 参考资料")])}],!1,null,null,null);i.options.__file="007-Element对象.md";t.default=i.exports}}]);