(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{396:function(t,s,a){t.exports=a.p+"assets/img/006-advanced.61fbd402.jpg"},397:function(t,s,a){t.exports=a.p+"assets/img/007-advanced.896cb780.jpg"},398:function(t,s,a){t.exports=a.p+"assets/img/008-advanced.b0691694.jpg"},399:function(t,s,a){t.exports=a.p+"assets/img/005.a75ec42f.png"},648:function(t,s,a){"use strict";a.r(s);var n=[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#_1-垃圾回收的必要性"}},[t._v("1. 垃圾回收的必要性")])]),a("li",[a("a",{attrs:{href:"#_2-垃圾回收机制"}},[t._v("2. 垃圾回收机制")]),a("ul",[a("li",[a("a",{attrs:{href:"#_2-1-标记清除"}},[t._v("2.1 标记清除")])]),a("li",[a("a",{attrs:{href:"#_2-2-引用计数"}},[t._v("2.2 引用计数")])])])]),a("li",[a("a",{attrs:{href:"#_3-哪些情况会引起内存泄漏？"}},[t._v("3. 哪些情况会引起内存泄漏？")]),a("ul",[a("li",[a("a",{attrs:{href:"#_3-1-意外的全局变量"}},[t._v("3.1 意外的全局变量")])]),a("li",[a("a",{attrs:{href:"#_3-2-被遗忘的计时器或回调函数"}},[t._v("3.2 被遗忘的计时器或回调函数")])]),a("li",[a("a",{attrs:{href:"#_3-3-闭包"}},[t._v("3.3 闭包")])]),a("li",[a("a",{attrs:{href:"#_3-4-没有清理的dom元素引用"}},[t._v("3.4 没有清理的DOM元素引用")])])])]),a("li",[a("a",{attrs:{href:"#_4-内存泄漏的识别方法"}},[t._v("4. 内存泄漏的识别方法")])]),a("li",[a("a",{attrs:{href:"#_5-垃圾回收的使用场景优化"}},[t._v("5. 垃圾回收的使用场景优化")]),a("ul",[a("li",[a("a",{attrs:{href:"#_5-1-数组array优化"}},[t._v("5.1 数组array优化")])]),a("li",[a("a",{attrs:{href:"#_5-2-对象尽量复用"}},[t._v("5.2 对象尽量复用")])]),a("li",[a("a",{attrs:{href:"#_5-3-在循环中的函数表达式，能复用最好放到循环外面"}},[t._v("5.3 在循环中的函数表达式，能复用最好放到循环外面")])])])]),a("li",[a("a",{attrs:{href:"#_6-参考资料"}},[t._v("6. 参考资料")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h1",{attrs:{id:"js中的垃圾回收和内存泄露"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js中的垃圾回收和内存泄露","aria-hidden":"true"}},[this._v("#")]),this._v(" JS中的垃圾回收和内存泄露")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_1-垃圾回收的必要性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-垃圾回收的必要性","aria-hidden":"true"}},[this._v("#")]),this._v(" 1. 垃圾回收的必要性")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"浪里行舟"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"前端工匠"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" b"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("//重写a")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_2-垃圾回收机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-垃圾回收机制","aria-hidden":"true"}},[this._v("#")]),this._v(" 2. 垃圾回收机制")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("在 JavaScript 内存管理中有一个概念叫做 "),s("code",[this._v("可达性")]),this._v("，就是那些以某种方式可访问或者说可用的值，它们被保证存储在内存中，反之不可访问则需回收")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("至于如何回收，其实就是怎样发现这些不可达的对象（垃圾）它并给予清理的问题， "),s("code",[this._v("JavaScript")]),this._v(" 垃圾回收机制的原理说白了也就是定期找出那些不再用到的内存（变量），然后释放其内存")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("标记清除算法")]),this._v(" "),s("li",[this._v("引用计数算法")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_2-1-标记清除"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-标记清除","aria-hidden":"true"}},[this._v("#")]),this._v(" 2.1 标记清除")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("标记清除（Mark-Sweep），目前在 "),s("code",[this._v("JavaScript引擎")]),this._v(" 里这种算法是最常用的，到目前为止的大多数浏览器的 "),s("code",[this._v("JavaScript引擎")]),this._v(" 都在采用标记清除算法，只是各大浏览器厂商还对此算法进行了优化加工，且不同浏览器的 "),s("code",[this._v("JavaScript引擎")]),this._v(" 在运行垃圾回收的频率上有所差异")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("就像它的名字一样，此算法分为 "),s("code",[this._v("标记")]),this._v(" 和 "),s("code",[this._v("清除")]),this._v(" 两个阶段，标记阶段即为所有活动对象做上标记，清除阶段则把没有标记（也就是非活动对象）销毁。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("引擎在执行 GC（使用标记清除算法）时，需要从出发点去遍历内存中所有的对象去打标记，而这个出发点有很多，我们称之为一组 "),s("code",[this._v("根")]),this._v(" 对象，而所谓的根对象，其实在浏览器环境中包括又不止于 "),s("code",[this._v("全局Window对象")]),this._v("、"),s("code",[this._v("文档DOM树")]),this._v(" 等")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("垃圾收集器在运行时会给内存中的所有变量都加上一个标记，假设内存中所有对象都是垃圾，全标记为0")]),this._v(" "),s("li",[this._v("然后从各个根对象开始遍历，把不是垃圾的节点改成1")]),this._v(" "),s("li",[this._v("清理所有标记为0的垃圾，销毁并回收它们所占用的内存空间")]),this._v(" "),s("li",[this._v("最后，把所有内存中对象标记修改为0，等待下一轮垃圾回收")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"_2-1-1-优点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-1-优点","aria-hidden":"true"}},[this._v("#")]),this._v(" 2.1.1 优点")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"_2-1-2-缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-2-缺点","aria-hidden":"true"}},[this._v("#")]),this._v(" 2.1.2 缺点")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("标记清除算法有一个很大的缺点，就是在清除之后，剩余的对象内存位置是不变的，也会导致空闲内存空间是不连续的，出现了 "),s("code",[this._v("内存碎片")]),this._v("（如下图），并且由于剩余空闲内存不是一整块，它是由不同大小内存组成的内存列表，这就牵扯出了内存分配的问题")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:a(396),alt:""}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("假设我们新建对象分配内存时需要大小为 "),s("code",[this._v("size")]),this._v("，由于空闲内存是间断的、不连续的，则需要对空闲内存列表进行一次单向遍历找出大于等于 "),s("code",[this._v("size")]),this._v(" 的块才能为其分配（如下图）")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:a(397),alt:""}})])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("p",[t._v("这三种策略里面 "),a("code",[t._v("Worst-fit")]),t._v(" 的空间利用率看起来是最合理，但实际上切分之后会造成更多的小块，形成内存碎片，所以不推荐使用，对于 "),a("code",[t._v("First-fit")]),t._v(" 和 "),a("code",[t._v("Best-fit")]),t._v(" 来说，考虑到分配的速度和效率 "),a("code",[t._v("First-fit")]),t._v(" 是更为明智的选择")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ul",[a("li",[a("strong",[t._v("内存碎片化")]),t._v("，空闲内存块是不连续的，容易出现很多空闲内存块，还可能会出现分配所需内存过大的对象时找不到合适的块")]),t._v(" "),a("li",[a("strong",[t._v("分配速度慢")]),t._v("，因为即便是使用 "),a("code",[t._v("First-fit")]),t._v(" 策略，其操作仍是一个 "),a("code",[t._v("O(n)")]),t._v(" 的操作，最坏情况是每次都要遍历到最后，同时因为碎片化，大对象的分配效率会更慢")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"_2-1-3-解决缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-3-解决缺点","aria-hidden":"true"}},[this._v("#")]),this._v(" 2.1.3 解决缺点")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("而 "),s("strong",[this._v("标记整理（Mark-Compact）算法")]),this._v(" 就可以有效地解决，它的标记阶段和标记清除算法没有什么不同，只是标记结束后，标记整理算法会将活着的对象（即不需要清理的对象）向内存的一端移动，最后清理掉边界的内存（如下图）")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:a(398),alt:""}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_2-2-引用计数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-引用计数","aria-hidden":"true"}},[this._v("#")]),this._v(" 2.2 引用计数")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("引用计数（Reference Counting），这其实是早先的一种垃圾回收算法，它把 "),s("code",[this._v("对象是否不再需要")]),this._v(" 简化定义为 "),s("code",[this._v("对象有没有其他对象引用到它")]),this._v("，如果没有引用指向该对象（零引用），对象将被垃圾回收机制回收，目前很少使用这种算法了，因为它的问题很多，不过我们还是需要了解一下")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("当声明了一个变量并且将一个引用类型赋值给该变量的时候这个值的引用次数就为 1")]),this._v(" "),s("li",[this._v("如果同一个值又被赋给另一个变量，那么引用数加 1")]),this._v(" "),s("li",[this._v("如果该变量的值被其他的值覆盖了，则引用次数减 1")]),this._v(" "),s("li",[this._v("当这个值的引用次数变为 0 的时候，说明没有变量在使用，这个值没法被访问了，回收空间，垃圾回收器会在运行的时候清理掉引用次数为 0 的值占用的内存")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("et a "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \t"),a("span",{attrs:{class:"token comment"}},[t._v("// 此对象的引用计数为 1（a引用）")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" b "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" a \t\t"),a("span",{attrs:{class:"token comment"}},[t._v("// 此对象的引用计数是 2（a,b引用）")]),t._v("\na "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("null")]),t._v("  \t\t"),a("span",{attrs:{class:"token comment"}},[t._v("// 此对象的引用计数为 1（b引用）")]),t._v("\nb "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("null")]),t._v(" \t \t"),a("span",{attrs:{class:"token comment"}},[t._v("// 此对象的引用计数为 0（无引用）")]),t._v("\n"),a("span",{attrs:{class:"token operator"}},[t._v("...")]),t._v("\t\t\t"),a("span",{attrs:{class:"token comment"}},[t._v("// GC 回收此对象")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("test")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),a("span",{attrs:{class:"token constant"}},[t._v("A")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),a("span",{attrs:{class:"token constant"}},[t._v("B")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  \n  "),a("span",{attrs:{class:"token constant"}},[t._v("A")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("b "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token constant"}},[t._v("B")]),t._v("\n  "),a("span",{attrs:{class:"token constant"}},[t._v("B")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token constant"}},[t._v("A")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("如上所示，对象 A 和 B 通过各自的属性相互引用着，按照上文的引用计数策略，它们的引用数量都是 2，但是，在函数 "),s("code",[this._v("test")]),this._v(" 执行完成之后，对象 A 和 B 是要被清理的，但使用引用计数则不会被清理，因为它们的引用数量不会变成 0，假如此函数在程序中被多次调用，那么就会造成大量的内存不会被释放")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("blockquote",[a("p",[t._v("在 IE8 以及更早版本的 IE 中，"),a("code",[t._v("BOM")]),t._v(" 和 "),a("code",[t._v("DOM")]),t._v(" 对象并非是原生 "),a("code",[t._v("JavaScript")]),t._v(" 对象，它是由 "),a("code",[t._v("C++")]),t._v(" 实现的 "),a("code",[t._v("组件对象模型对象（COM，Component Object Model）")]),t._v("，而 "),a("code",[t._v("COM")]),t._v(" 对象使用 引用计数算法来实现垃圾回收，所以即使浏览器使用的是标记清除算法，只要涉及到 "),a("code",[t._v("COM")]),t._v(" 对象的循环引用，就还是无法被回收掉，就比如两个互相引用的 "),a("code",[t._v("DOM")]),t._v(" 对象等等，而想要解决循环引用，需要将引用地址置为 "),a("code",[t._v("null")]),t._v(" 来切断变量与之前引用值的关系，如下")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("// COM对象")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" ele "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"xxx"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" obj "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 造成循环引用")]),t._v("\nobj"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ele "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" ele\nele"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("obj "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" obj\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 切断引用关系")]),t._v("\nobj"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ele "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("null")]),t._v("\nele"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("obj "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n")])])]),a("p",[t._v("不过在 IE9 及以后的 "),a("code",[t._v("BOM")]),t._v(" 与 "),a("code",[t._v("DOM")]),t._v(" 对象都改成了 "),a("code",[t._v("JavaScript")]),t._v(" 对象，也就避免了上面的问题")]),t._v(" "),a("p",[t._v("此处参考 JavaScript高级程序设计 第四版(第三版) 4.3.2 小节")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"_2-2-1-优点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-1-优点","aria-hidden":"true"}},[this._v("#")]),this._v(" 2.2.1 优点")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("而标记清除算法需要每隔一段时间进行一次，那在应用程序（JS脚本）运行过程中线程就必须要暂停去执行一段时间的 "),s("code",[this._v("GC")]),this._v("，另外，标记清除算法需要遍历堆里的活动以及非活动对象来清除，而引用计数则只需要在引用时计数就可以了。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"_2-2-2-缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-2-缺点","aria-hidden":"true"}},[this._v("#")]),this._v(" 2.2.2 缺点")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_3-哪些情况会引起内存泄漏？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-哪些情况会引起内存泄漏？","aria-hidden":"true"}},[this._v("#")]),this._v(" 3. 哪些情况会引起内存泄漏？")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_3-1-意外的全局变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-意外的全局变量","aria-hidden":"true"}},[this._v("#")]),this._v(" 3.1 意外的全局变量")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("foo")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arg"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    bar "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"this is a hidden global variable"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("另一种意外的全局变量可能由 "),s("code",[this._v("this")]),this._v(" 创建:")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("foo")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("this")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("variable "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"potential accidental global"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// foo 调用自己，this 指向了全局对象（window）")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("foo")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_3-2-被遗忘的计时器或回调函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-被遗忘的计时器或回调函数","aria-hidden":"true"}},[this._v("#")]),this._v(" 3.2 被遗忘的计时器或回调函数")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" someResource "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("getData")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("setInterval")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" node "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'Node'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token comment"}},[t._v("// 处理 node 和 someResource")]),t._v("\n        node"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("innerHTML "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token constant"}},[t._v("JSON")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("stringify")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("someResource"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("1000")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_3-3-闭包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-闭包","aria-hidden":"true"}},[this._v("#")]),this._v(" 3.3 闭包")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("bindEvent")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("document"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("createElement")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'xxx'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  obj"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function-variable function"}},[t._v("onclick")]),a("span",{attrs:{class:"token operator"}},[t._v("=")]),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token comment"}},[t._v("// Even if it is a empty function")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("// 将事件处理函数定义在外面")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("bindEvent")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("createElement")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'xxx'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  obj"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("onclick "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" onclickHandler\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 或者在定义事件处理函数的外部函数中，删除对dom的引用")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("bindEvent")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("createElement")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'xxx'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  obj"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function-variable function"}},[t._v("onclick")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token comment"}},[t._v("// Even if it is a empty function")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  obj "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_3-4-没有清理的dom元素引用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-没有清理的dom元素引用","aria-hidden":"true"}},[this._v("#")]),this._v(" 3.4 没有清理的DOM元素引用")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" elements "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    button"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" document"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'button'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    image"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" document"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'image'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    text"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" document"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'text'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("doStuff")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    image"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("src "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'http://some.url/image'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    button"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("click")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    console"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("text"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("innerHTML"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("removeButton")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    document"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("removeChild")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("document"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'button'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token comment"}},[t._v("// 此时，仍旧存在一个全局的 #button 的引用")]),t._v("\n    "),a("span",{attrs:{class:"token comment"}},[t._v("// elements 字典。button 元素仍旧在内存中，不能被 GC 回收。")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_4-内存泄漏的识别方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-内存泄漏的识别方法","aria-hidden":"true"}},[this._v("#")]),this._v(" 4. 内存泄漏的识别方法")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("页面右键 -> Inspect，在弹出的开发者工具中，选择 Performance")]),this._v(" "),s("li",[this._v("勾选 Screenshots 和 memory")]),this._v(" "),s("li",[this._v("左上角小圆点开始录制(record)")]),this._v(" "),s("li",[this._v("停止录制")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:a(399),alt:"img"}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("减少不必要的全局变量，或者生命周期较长的对象，及时对无用的数据进行垃圾回收")]),this._v(" "),s("li",[this._v("注意程序逻辑，避免“死循环”之类的")]),this._v(" "),s("li",[this._v("避免创建过多的对象")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("总而言之需要遵循一条"),s("strong",[this._v("原则：不用了的东西要及时归还")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_5-垃圾回收的使用场景优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-垃圾回收的使用场景优化","aria-hidden":"true"}},[this._v("#")]),this._v(" 5. 垃圾回收的使用场景优化")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_5-1-数组array优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-数组array优化","aria-hidden":"true"}},[this._v("#")]),this._v(" 5.1 数组array优化")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" arr "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("2")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("3")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("4")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'浪里行舟'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\narr"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),t._v("  "),a("span",{attrs:{class:"token comment"}},[t._v("// 可以直接让数字清空，而且数组类型不变。")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// arr = []; 虽然让a变量成一个空数组,但是在堆上重新申请了一个空数组对象。")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_5-2-对象尽量复用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-对象尽量复用","aria-hidden":"true"}},[this._v("#")]),this._v(" 5.2 对象尽量复用")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" t "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 每次循环都会创建一个新对象。")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("10")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{attrs:{class:"token operator"}},[t._v("++")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token comment"}},[t._v("// var t = {};// 每次循环都会创建一个新对象。")]),t._v("\n  t"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("19")]),t._v("\n  t"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'123'")]),t._v("\n  t"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("index "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" i\n  console"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nt "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("//对象如果已经不用了，那就立即设置为null；等待垃圾回收。")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_5-3-在循环中的函数表达式，能复用最好放到循环外面"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-在循环中的函数表达式，能复用最好放到循环外面","aria-hidden":"true"}},[this._v("#")]),this._v(" 5.3 在循环中的函数表达式，能复用最好放到循环外面")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("// 在循环中最好也别使用函数表达式。")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" k "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" k "),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("10")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" k"),a("span",{attrs:{class:"token operator"}},[t._v("++")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{attrs:{class:"token function-variable function"}},[t._v("t")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token comment"}},[t._v("// 创建了10次  函数对象。")]),t._v("\n    console"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{attrs:{class:"token function"}},[t._v("t")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("k"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 推荐用法")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("t")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" k "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" k "),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("10")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" k"),a("span",{attrs:{class:"token operator"}},[t._v("++")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token function"}},[t._v("t")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("k"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nt "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_6-参考资料"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-参考资料","aria-hidden":"true"}},[this._v("#")]),this._v(" 6. 参考资料")])}],e=a(0),r=Object(e.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("p"),t._m(0),a("p"),t._v(" "),a("p",[t._v("[TOC]")]),t._v(" "),t._m(1),t._v(" "),a("p",[t._v("本文参考了：")]),t._v(" "),a("p",[t._v("https://segmentfault.com/a/1190000019035469")]),t._v(" "),a("p",[t._v("https://juejin.cn/post/6981588276356317214")]),t._v(" "),a("p",[t._v("程序的运行需要内存。只要程序提出要求，操作系统或者运行时就必须供给内存。所谓的内存泄漏简单来说是不再用到的内存，没有及时释放。为了更好避免内存泄漏，我们先介绍Javascript垃圾回收机制。")]),t._v(" "),a("p",[t._v("在C与C++等语言中，开发人员可以直接控制内存的申请和回收。但是在Java、C#、JavaScript语言中，变量的内存空间的申请和释放都由程序自己处理，开发人员不需要关心。也就是说Javascript具有自动垃圾回收机制(Garbage Collecation)。")]),t._v(" "),t._m(2),t._v(" "),a("p",[t._v("下面这段话引自《JavaScript权威指南（第四版）》")]),t._v(" "),a("p",[t._v("由于字符串、对象和数组没有固定大小，所有当他们的大小已知时，才能对他们进行动态的存储分配。JavaScript程序每次创建字符串、数组或对象时，解释器都必须分配内存来存储那个实体。只要像这样动态地分配了内存，最终都要释放这些内存以便他们能够被再用，否则，JavaScript的解释器将会消耗完系统中所有可用的内存，造成系统崩溃。")]),t._v(" "),a("p",[t._v("这段话解释了为什么需要系统需要垃圾回收，JavaScript不像C/C++，它有自己的一套垃圾回收机制。")]),t._v(" "),a("p",[t._v("JavaScript垃圾回收的机制很简单：找出不再使用的变量，然后释放掉其占用的内存，但是这个过程不是时时的，因为其开销比较大，所以垃圾回收器会按照固定的时间间隔周期性的执行。")]),t._v(" "),t._m(3),a("p",[t._v("这段代码运行之后，“浪里行舟”这个字符串失去了引用（之前是被a引用），系统检测到这个事实之后，就会释放该字符串的存储空间以便这些空间可以被再利用。")]),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),a("p",[t._v("你可能还会好奇为什么不是实时的找出无用内存并释放呢？其实很简单，实时开销太大了")]),t._v(" "),a("p",[t._v("我们都可以 Get 到这之中的重点，那就是怎样找出所谓的垃圾？")]),t._v(" "),a("p",[t._v("这个流程就涉及到了一些算法策略，有很多种方式，我们简单介绍两个最常见的")]),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),a("p",[t._v("整个标记清除算法大致过程就像下面这样")]),t._v(" "),t._m(12),t._v(" "),t._m(13),t._v(" "),a("p",[t._v("标记清除算法的优点只有一个，那就是实现比较简单，打标记也无非打与不打两种情况，这使得一位二进制位（0和1）就可以为其标记，非常简单")]),t._v(" "),t._m(14),t._v(" "),t._m(15),t._v(" "),t._m(16),t._v(" "),t._m(17),t._v(" "),t._m(18),t._v(" "),t._m(19),t._v(" "),a("p",[t._v("综上所述，标记清除算法或者说策略就有两个很明显的缺点")]),t._v(" "),t._m(20),t._v(" "),t._m(21),t._v(" "),a("p",[t._v("归根结底，标记清除算法的缺点在于清除之后剩余的对象位置不变而导致的空闲内存不连续，所以只要解决这一点，两个缺点都可以完美解决了")]),t._v(" "),t._m(22),t._v(" "),t._m(23),t._v(" "),t._m(24),t._v(" "),t._m(25),t._v(" "),a("p",[t._v("它的策略是跟踪记录每个变量值被使用的次数")]),t._v(" "),t._m(26),t._v(" "),a("p",[t._v("如下例")]),t._v(" "),t._m(27),a("p",[t._v("这种方式是不是很简单？确实很简单，不过在引用计数这种算法出现没多久，就遇到了一个很严重的问题——循环引用，即对象 A 有一个指针指向对象 B，而对象 B 也引用了对象 A ，如下面这个例子")]),t._v(" "),t._m(28),t._m(29),t._v(" "),a("p",[t._v("我们再用标记清除的角度看一下，当函数结束后，两个对象都不在作用域中，A 和 B 都会被当作非活动对象来清除掉，相比之下，引用计数则不会释放，也就会造成大量无用内存占用，这也是后来放弃引用计数，使用标记清除的原因之一")]),t._v(" "),t._m(30),t._v(" "),t._m(31),t._v(" "),a("p",[t._v("引用计数算法的优点我们对比标记清除来看就会清晰很多，首先引用计数在引用值为 0 时，也就是在变成垃圾的那一刻就会被回收，所以它可以立即回收垃圾。")]),t._v(" "),t._m(32),t._v(" "),t._m(33),t._v(" "),a("p",[t._v("引用计数的缺点想必大家也都很明朗了，首先它需要一个计数器，而此计数器需要占很大的位置，因为我们也不知道被引用数量的上限，还有就是无法解决循环引用无法回收的问题，这也是最严重的。")]),t._v(" "),t._m(34),t._v(" "),a("p",[t._v("虽然JavaScript会自动垃圾收集，但是如果我们的代码写法不当，会让变量一直处于“进入环境”的状态，无法被回收。下面列一下内存泄漏常见的几种情况：")]),t._v(" "),t._m(35),t._v(" "),t._m(36),a("p",[t._v("bar没被声明,会变成一个全局变量,在页面关闭之前不会被释放。")]),t._v(" "),t._m(37),t._v(" "),t._m(38),a("p",[t._v("在 JavaScript 文件头部加上 'use strict'，可以避免此类错误发生。启用严格模式解析 JavaScript ，避免意外的全局变量。")]),t._v(" "),t._m(39),t._v(" "),t._m(40),a("p",[t._v("这样的代码很常见，如果id为Node的元素从DOM中移除，该定时器仍会存在，同时，因为回调函数中包含对someResource的引用，定时器外面的someResource也不会被释放。")]),t._v(" "),t._m(41),t._v(" "),t._m(42),a("p",[t._v("闭包可以维持函数内局部变量，使其得不到释放。上例定义事件回调时，由于是函数内定义函数，并且内部函数--事件回调引用外部函数，形成了闭包。")]),t._v(" "),t._m(43),a("p",[t._v("解决之道，将事件处理函数定义在外部，解除闭包，或者在定义事件处理函数的外部函数中，删除对dom的引用。")]),t._v(" "),t._m(44),t._v(" "),a("p",[t._v("有时，保存 DOM 节点内部数据结构很有用。假如你想快速更新表格的几行内容，把每一行 DOM 存成字典（JSON 键值对）或者数组很有意义。此时，同样的 DOM 元素存在两个引用：一个在 DOM 树中，另一个在字典中。将来你决定删除这些行时，需要把两个引用都清除。")]),t._v(" "),t._m(45),a("p",[t._v("虽然我们用removeChild移除了button，但是还在elements对象里保存着#button的引用，换言之，DOM元素还在内存里面。")]),t._v(" "),t._m(46),t._v(" "),a("p",[t._v("新版本的chrome在 performance 中查看, 打开performance步骤：")]),t._v(" "),t._m(47),t._v(" "),a("p",[t._v("图中 Heap 对应的部分就可以看到内存在周期性的回落也可以看到垃圾回收的周期,如果垃圾回收之后的最低值(我们称为min),min在不断上涨,那么肯定是有较为严重的内存泄漏问题。")]),t._v(" "),t._m(48),t._v(" "),a("p",[t._v("避免内存泄漏的一些方式：")]),t._v(" "),t._m(49),t._v(" "),t._m(50),t._v(" "),t._m(51),t._v(" "),t._m(52),t._v(" "),a("p",[t._v("将[]赋值给一个数组对象，是清空数组的捷径(例如： arr = []😉,但是需要注意的是，这种方式又创建了一个新的空对象，并且将原来的数组对象变成了一小片内存垃圾！实际上，将数组长度赋值为0（arr.length = 0）也能达到清空数组的目的，并且同时能实现数组重用，减少内存垃圾的产生。")]),t._v(" "),t._m(53),t._m(54),t._v(" "),a("p",[t._v("对象尽量复用，尤其是在循环等地方出现创建新对象，能复用就复用。不用的对象，尽可能设置为null，尽快被垃圾回收掉。")]),t._v(" "),t._m(55),t._m(56),t._v(" "),t._m(57),a("p",[a("strong",[t._v("给大家推荐一个好用的BUG监控工具"),a("a",{attrs:{href:"https://www.fundebug.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Fundebug"),a("OutboundLink")],1),t._v("，欢迎免费试用！")])]),t._v(" "),t._m(58),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/ljianshu/Blog",target:"_blank",rel:"noopener noreferrer"}},[t._v("浪里行舟的blog"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://ke.qq.com/course/276435",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaScript高级内幕（js高级）"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.cnblogs.com/hustskyking/archive/2013/04/27/garbage-collection.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaScript垃圾回收机制"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2017/04/memory-leak.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaScript 内存泄漏教程"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/23992332",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaScript 中的垃圾回收"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2017/04/memory-leak.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("4类 JavaScript 内存泄漏及如何避免"),a("OutboundLink")],1)])])])},n,!1,null,null,null);r.options.__file="009-JS中的垃圾回收和内存泄露.md";s.default=r.exports}}]);